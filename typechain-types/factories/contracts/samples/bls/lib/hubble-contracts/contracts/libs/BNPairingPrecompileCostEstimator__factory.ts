/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../../common";
import type {
  BNPairingPrecompileCostEstimator,
  BNPairingPrecompileCostEstimatorInterface,
} from "../../../../../../../../contracts/samples/bls/lib/hubble-contracts/contracts/libs/BNPairingPrecompileCostEstimator";

const _abi = [
  {
    inputs: [],
    name: "baseCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pairCount",
        type: "uint256",
      },
    ],
    name: "getGasCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "perPairCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610761908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081634e79f8ca1461006657508063938225571461005d578063c0406226146100545763ebfd94b21461004c57600080fd5b61000e61020f565b5061000e6100e0565b5061000e6100c1565b346100be5760203660031901126100be576001546020916004358281029281159184041417156100b1575b5481018091116100a4575b604051908152f35b6100ac61022e565b61009c565b6100b961022e565b610091565b80fd5b503461000e57600036600319011261000e576020600054604051908152f35b503461000e576000806003193601126100be5761020a6100fe610283565b60018152600260208201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c260408201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed60608201527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60808201527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60a08201526101e86101ac6102d1565b6101e16101db60208360c06101c05a610245565b976101ce6107d05a11610304565b60085a99fa945a9061025f565b93610376565b51156103e8565b6102016101fc826101f76105c8565b61025f565b600155565b6001549061025f565b815580f35b503461000e57600036600319011261000e576020600154604051908152f35b50634e487b7160e01b600052601160045260246000fd5b6107cf1981019190821161025557565b61025d61022e565b565b9190820391821161025557565b50634e487b7160e01b600052604160045260246000fd5b6040519060c0820182811067ffffffffffffffff8211176102a357604052565b6102ab61026c565b604052565b60405190610180820182811067ffffffffffffffff8211176102a357604052565b604051906020820182811067ffffffffffffffff8211176102f7575b6040526020368337565b6102ff61026c565b6102ed565b1561030b57565b60405162461bcd60e51b815260206004820152603d60248201527f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7260448201527f3a206e6f7420656e6f756768206761732c2073696e676c6520706169720000006064820152608490fd5b1561037d57565b60405162461bcd60e51b815260206004820152603c60248201527f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7260448201527f3a2073696e676c6520706169722063616c6c206973206661696c6564000000006064820152608490fd5b156103ef57565b60405162461bcd60e51b815260206004820152604360248201527f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7260448201527f3a2073696e676c6520706169722063616c6c20726573756c74206d757374206260648201526206520360ec1b608482015260a490fd5b1561046d57565b60405162461bcd60e51b815260206004820152603d60248201527f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7260448201527f3a206e6f7420656e6f756768206761732c20636f75706c6520706169720000006064820152608490fd5b156104df57565b60405162461bcd60e51b815260206004820152603c60248201527f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7260448201527f3a20636f75706c6520706169722063616c6c206973206661696c6564000000006064820152608490fd5b1561055157565b60405162461bcd60e51b815260206004820152604360248201527f424e50616972696e67507265636f6d70696c65436f7374457374696d61746f7260448201527f3a20636f75706c6520706169722063616c6c20726573756c74206d757374206260648201526265203160e81b608482015260a490fd5b6105d06102b0565b60018152600260208201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28060408301527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed908160608401527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60808401527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60a0840152600160c0840152600260e08401526101008301526101208201527f275dc4a288d1afb3cbb1ac09187524c7db36395df7be3b99e673b13a075a65ec6101408201527f1d9befcd05a5323e6da4d435f3b617cdb3af83285c2df711ef39c01571827f9d61016082015261072860016106eb6102d1565b61072161071b6020836101806107005a610245565b9861070e6107d05a11610466565b60085a9afa955a9061025f565b946104d8565b511461054a565b9056fea2646970667358221220bcbe6b89c69ba49f00abce5f33760e72830da61f743160baf9642278c3365e8864736f6c63430008110033";

type BNPairingPrecompileCostEstimatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BNPairingPrecompileCostEstimatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BNPairingPrecompileCostEstimator__factory extends ContractFactory {
  constructor(...args: BNPairingPrecompileCostEstimatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BNPairingPrecompileCostEstimator> {
    return super.deploy(
      overrides || {}
    ) as Promise<BNPairingPrecompileCostEstimator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BNPairingPrecompileCostEstimator {
    return super.attach(address) as BNPairingPrecompileCostEstimator;
  }
  override connect(signer: Signer): BNPairingPrecompileCostEstimator__factory {
    return super.connect(signer) as BNPairingPrecompileCostEstimator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BNPairingPrecompileCostEstimatorInterface {
    return new utils.Interface(
      _abi
    ) as BNPairingPrecompileCostEstimatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BNPairingPrecompileCostEstimator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BNPairingPrecompileCostEstimator;
  }
}
