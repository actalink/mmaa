/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BLSAccount,
  BLSAccountInterface,
} from "../../../../contracts/samples/bls/BLSAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anAggregator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[4]",
        name: "oldPublicKey",
        type: "uint256[4]",
      },
      {
        indexed: false,
        internalType: "uint256[4]",
        name: "newPublicKey",
        type: "uint256[4]",
      },
    ],
    name: "PublicKeyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlsPublicKey",
    outputs: [
      {
        internalType: "uint256[4]",
        name: "",
        type: "uint256[4]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "aPublicKey",
        type: "uint256[4]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[4]",
        name: "newPublicKey",
        type: "uint256[4]",
      },
    ],
    name: "setBlsPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e03461018b57601f62001d4238819003918201601f19168301916001600160401b0383118484101761019057808492604094855283398101031261018b5780516001600160a01b0391828216820361018b5760200151918216820361018b573060805260a05260005460ff8160081c166101365760ff808216106100fb575b5060c052604051611b9b9081620001a7823960805181818161063d01528181610b2c0152610c9c015260a0518181816107f20152818161096d01528181610a1301528181610da401528181610efb0152818161108e015281816111ce015281816118d00152611922015260c0518181816105ef01526108450152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a13861007f565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806223de29146101d257806301ffc9a7146101c9578063150b7a02146101c057806318dfb3c7146101b757806318fc5c44146101ae578063245a7bfc146101a55780633659cfe61461019c5780633a871cdd146101935780634a58db191461018a5780634d44560d146101815780634f1ef2861461017857806352d1902d1461016f5780638da5cb5b14610166578063b0d691fe1461015d578063b61d27f614610154578063bc197c811461014b578063c399ec8814610142578063c4d66de814610139578063d087d28814610130578063e02afbae14610127578063ee472f361461011e5763f23a6e610361000e57610119611277565b61000e565b50610119611157565b5061011961112c565b50610119611056565b50610119610f68565b50610119610ecc565b50610119610e3b565b50610119610dc8565b50610119610d83565b50610119610d58565b50610119610c80565b50610119610ad5565b506101196109df565b50610119610955565b506101196107b2565b50610119610613565b506101196105ce565b506101196105af565b50610119610389565b506101196102fc565b5061011961028d565b5061011961021f565b6001600160a01b038116036101ec57565b600080fd5b9181601f840112156101ec5782359167ffffffffffffffff83116101ec57602083818601950101116101ec57565b50346101ec5760c03660031901126101ec5761023c6004356101db565b6102476024356101db565b6102526044356101db565b67ffffffffffffffff6084358181116101ec576102739036906004016101f1565b505060a4359081116101ec576100199036906004016101f1565b50346101ec5760203660031901126101ec5760043563ffffffff60e01b81168091036101ec57602090630a85bd0160e11b81149081156102eb575b81156102da575b506040519015158152f35b6301ffc9a760e01b149050386102cf565b630271189760e51b811491506102c8565b50346101ec5760803660031901126101ec576103196004356101db565b6103246024356101db565b60643567ffffffffffffffff81116101ec576103449036906004016101f1565b5050604051630a85bd0160e11b8152602090f35b9181601f840112156101ec5782359167ffffffffffffffff83116101ec576020808501948460051b0101116101ec57565b50346101ec5760403660031901126101ec5767ffffffffffffffff6004358181116101ec576103bc903690600401610358565b90916024359081116101ec576103d6903690600401610358565b91906103e0611917565b8282036104445760005b8281106103f357005b8061042761040c610407600194878a61178a565b6117a8565b61042161041a8489886117e5565b3691610a9e565b906119a9565b6000198114610437575b016103ea565b61043f61175c565b610431565b60405162461bcd60e51b815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152606490fd5b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116104b457604052565b6104bc610489565b604052565b6060810190811067ffffffffffffffff8211176104b457604052565b6080810190811067ffffffffffffffff8211176104b457604052565b6020810190811067ffffffffffffffff8211176104b457604052565b60a0810190811067ffffffffffffffff8211176104b457604052565b90601f8019910116810190811067ffffffffffffffff8211176104b457604052565b60405190610560826104c1565b565b60806003198201126101ec5780602312156101ec5760405190610584826104dd565b8160849182116101ec576004905b82821061059f5750505090565b8135815260209182019101610592565b50346101ec576100196105c136610562565b6105c96119c9565b611ade565b50346101ec5760003660031901126101ec5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346101ec5760203660031901126101ec57600435610631816101db565b6001600160a01b0390817f0000000000000000000000000000000000000000000000000000000000000000169161066a833014156112d3565b6106997f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc938285541614611345565b6106a16119c9565b604051906106ae826104f9565b600082527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156106e85750506100199150611445565b6020600491604094939451928380926352d1902d60e01b825286165afa60009181610782575b5061076f5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b6100199361077d91146113d3565b61150b565b6107a491925060203d81116107ab575b61079c8183610531565b8101906113b7565b903861070e565b503d610792565b50346101ec576003196060368201126101ec5760043567ffffffffffffffff81116101ec57610160816004019282360301126101ec576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163303610910576044019061082682826117b2565b90506108a1575b61089d61088261083b610553565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526000602082018190526040820152516001600160a01b031690565b61088d604435611741565b6040519081529081906020820190565b0390f35b6108fc61041a610909936108b3611b3f565b6040516108c4602082018093611104565b608081526108d181610515565b519020936108ef6108f66108e584846117b2565b94859391946117b2565b9050611a36565b91611a4d565b6020815191012014611a65565b388061082d565b60405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606490fd5b506000806003193601126109dc576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681813b156109dc5760405163b760faf960e01b8152306004820152918290602490829034905af180156109cf575b6109c3575080f35b6109cc906104a0565b80f35b6109d76113c6565b6109bb565b80fd5b50346101ec57600060403660031901126109dc576004356109ff816101db565b610a076119c9565b816001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001692833b15610a6f5760449083604051958694859363040b850f60e31b855216600484015260243560248401525af180156109cf576109c3575080f35b8280fd5b60209067ffffffffffffffff8111610a91575b601f01601f19160190565b610a99610489565b610a86565b929192610aaa82610a73565b91610ab86040519384610531565b8294818452818301116101ec578281602093846000960137010152565b5060403660031901126101ec57600435610aee816101db565b60243567ffffffffffffffff81116101ec57366023820112156101ec57610b1f903690602481600401359101610a9e565b906001600160a01b0391827f00000000000000000000000000000000000000000000000000000000000000001692610b59843014156112d3565b610b887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc948286541614611345565b610b906119c9565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610bc65750506100199150611445565b6020600491604094939451928380926352d1902d60e01b825286165afa60009181610c60575b50610c4d5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b61001993610c5b91146113d3565b6115dd565b610c7991925060203d81116107ab5761079c8183610531565b9038610bec565b50346101ec5760003660031901126101ec576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ced576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b50346101ec5760003660031901126101ec5760206001600160a01b0360005460101c16604051908152f35b50346101ec5760003660031901126101ec5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346101ec5760603660031901126101ec57600435610de6816101db565b60443567ffffffffffffffff81116101ec57600091610e15610e0d849336906004016101f1565b61041a611917565b9060208251920190602435905af1610e2b611630565b9015610e3357005b602081519101fd5b50346101ec5760a03660031901126101ec57610e586004356101db565b610e636024356101db565b67ffffffffffffffff6044358181116101ec57610e84903690600401610358565b50506064358181116101ec57610e9e903690600401610358565b50506084359081116101ec57610eb89036906004016101f1565b505060405163bc197c8160e01b8152602090f35b50346101ec5760003660031901126101ec576040516370a0823160e01b815230600482015260209081816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610f5b575b600091610f3e575b50604051908152f35b610f559150823d81116107ab5761079c8183610531565b38610f35565b610f636113c6565b610f2d565b50346101ec5760203660031901126101ec57600435610f86816101db565b610fca60005491610fae60ff8460081c161580948195611048575b8115611028575b5061180f565b82610fc1600160ff196000541617600055565b61100f57611881565b610fd057005b610fe061ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b61102361010061ff00196000541617600055565b611881565b303b1591508161103a575b5038610fa8565b6001915060ff161438611033565b600160ff8216109150610fa1565b50346101ec5760003660031901126101ec57604051631aab3f0d60e11b81523060048201526000602482015261089d906020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156110f7575b6000916110d9575b506040519081529081906020820190565b6110f1915060203d81116107ab5761079c8183610531565b386110c8565b6110ff6113c6565b6110c0565b6000915b6004831061111557505050565b600190825181526020809101920192019190611108565b50346101ec5760003660031901126101ec576080611148611b3f565b6111556040518092611104565bf35b50346101ec5761116636610562565b60009061121782549161118e60ff8460081c161580948195611048578115611028575061180f565b826111a1600160ff196000541617600055565b61125e575b75ffffffffffffffffffffffffffffffffffffffff0000198454168455836001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de8280a3611ade565b61121e5780f35b61122e61ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a180f35b61127261010061ff00196000541617600055565b6111a6565b50346101ec5760a03660031901126101ec576112946004356101db565b61129f6024356101db565b60843567ffffffffffffffff81116101ec576112bf9036906004016101f1565b505060405163f23a6e6160e01b8152602090f35b156112da57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608490fd5b1561134c57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608490fd5b908160209103126101ec575190565b506040513d6000823e3d90fd5b156113da57565b60405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608490fd5b803b156114a0576001600160a01b037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608490fd5b9061151582611445565b6001600160a01b0382167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28051158015906115d5575b611557575050565b6115d2916000806040519361156b856104c1565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af46115cc611630565b916116ac565b50565b50600061154f565b906115e782611445565b6001600160a01b0382167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511580159061162857611557575050565b50600161154f565b3d1561165b573d9061164182610a73565b9161164f6040519384610531565b82523d6000602084013e565b606090565b1561166757565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b919290156116cf57508151156116c0575090565b6116cc903b1515611660565b90565b8251909150156116e25750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611728575050604492506000838284010152601f80199101168101030190fd5b8481018201518686016044015293810193859350611705565b806117495750565b600080808093338219f1506115d2611630565b50634e487b7160e01b600052601160045260246000fd5b50634e487b7160e01b600052603260045260246000fd5b919081101561179b575b60051b0190565b6117a3611773565b611794565b356116cc816101db565b903590601e19813603018212156101ec570180359067ffffffffffffffff82116101ec576020019181360383136101ec57565b90916117fe92811015611802575b60051b8101906117b2565b9091565b61180a611773565b6117f3565b1561181657565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608490fd5b75ffffffffffffffffffffffffffffffffffffffff00001975ffffffffffffffffffffffffffffffffffffffff00006000549260101b16911617806000556001600160a01b03809160101c16907f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de600080a3565b6001600160a01b03807f0000000000000000000000000000000000000000000000000000000000000000163314908115611998575b501561195457565b606460405162461bcd60e51b815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b905060005460101c1633143861194c565b600091829182602083519301915af16119c0611630565b9015610e335750565b6001600160a01b0360005460101c1633148015611a2d575b156119e857565b60405162461bcd60e51b815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606490fd5b503033146119e1565b607f19810191908211611a4557565b61056061175c565b909392938483116101ec5784116101ec578101920390565b15611a6c57565b60405162461bcd60e51b815260206004820152600c60248201527f77726f6e67207075626b657900000000000000000000000000000000000000006044820152606490fd5b9060019182906000905b60048210611aca575050509050565b825481529184019190840190602001611abb565b7f42e4c4ce1432650f17e41c4ea77ed12c0ab20b229d3ffd84a2ebc9f8abb25a83610100604051611b0e81611ab1565b611b1b6080820185611104565ba160005b60048110611b2b575050565b600190602083519301928183015501611b1f565b6080604051611b4d816104dd565b369037604051611b5c81611ab1565b6116cc816104dd56fea2646970667358221220885ceb36eaa4e617210007df549a547e899d76e7e5048ea036dd54bd67c84fb564736f6c63430008110033";

type BLSAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BLSAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BLSAccount__factory extends ContractFactory {
  constructor(...args: BLSAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BLSAccount> {
    return super.deploy(
      anEntryPoint,
      anAggregator,
      overrides || {}
    ) as Promise<BLSAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      anAggregator,
      overrides || {}
    );
  }
  override attach(address: string): BLSAccount {
    return super.attach(address) as BLSAccount;
  }
  override connect(signer: Signer): BLSAccount__factory {
    return super.connect(signer) as BLSAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BLSAccountInterface {
    return new utils.Interface(_abi) as BLSAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BLSAccount {
    return new Contract(address, _abi, signerOrProvider) as BLSAccount;
  }
}
