/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DepositPaymaster,
  DepositPaymasterInterface,
} from "../../../contracts/samples/DepositPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addDepositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "tokenPriceOracle",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unlockBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokensTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100ea57601f61153538819003918201601f19168301916001600160401b038311848410176100ef578084926020946040528339810103126100ea57516001600160a01b039081811681036100ea5760008054336001600160a01b0319821681178355604051949293929091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08480a3608052338152600360205260404391205561142f908161010682396080518181816105dc015281816107d6015281816108c901528181610943015281816109b001528181610e9901528181610f2701526110e50152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600090813560e01c80630396cb6014610ef5578063205c287814610e6a578063382edd9e14610d9e578063493b017014610d3f5780634a6f84cf14610d095780635476bd7214610c4d578063715018a614610be6578063796d437114610bca5780638da5cb5b14610ba55780639ed0fb6814610b84578063a9a2340914610a0d578063addd5099146109d4578063b0d691fe14610991578063bb9fe6bf1461091d578063c23a5cea14610899578063c23f001f1461084e578063c399ec88146107a3578063cc9c837c1461067e578063cd8f80c214610655578063d0e30db0146105c3578063f2fde38b146104d95763f465c77e1461011357600080fd5b346104d557600319906060368301126104d15783359167ffffffffffffffff948584116104cd5783810193610160813603938401126104c95760449283359161015a6110db565b6188b860a4820135111561046157610124810135916022190182121561045d5701928284013588811161045d57602494813603868201136103f257602882036103f657816014116103f257603801356bffffffffffffffffffffffff198082169160146013198501106103db575b5050905060601c6001600160a01b03968781351690828a5260209860018a52888b205416801561038e57908988959493928a519687809263d1eca9cf60e01b82528a8c8301525afa948515610384578b9561034e575b50610228906113d0565b92818b5260038a52888b205461030257828b5260028a52888b20826000528a52848960002054106102b85750875198890152868801526060870152608086015260a085015260a0845260c0840195848710908711176102a55750508381528352610296610100820182610ff7565b9160e082015260bf1991030190f35b604190634e487b7160e01b600052526000fd5b867f4465706f7369745061796d61737465723a206465706f73697420746f6f206c6f60849260218b8e8e519562461bcd60e51b8752860152840152820152607760f81b6064820152fd5b867f4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f6084928a8d8d519462461bcd60e51b8652850152808401528201526318dad95960e21b6064820152fd5b9094508981813d831161037d575b61036681836110b9565b8101031261037857519361022861021e565b600080fd5b503d61035c565b89513d8d823e3d90fd5b885162461bcd60e51b81528088018b90526023818a01527f4465706f7369745061796d61737465723a20756e737570706f7274656420746f818701526235b2b760e91b6064820152608490fd5b91506014819381030160031b1b16168038806101c8565b8880fd5b865162461bcd60e51b81526020818701526035818801527f4465706f7369745061796d61737465723a207061796d6173746572416e644461818501527f7461206d757374207370656369667920746f6b656e00000000000000000000006064820152608490fd5b8780fd5b855162461bcd60e51b8152602081860152602860248201527f4465706f7369745061796d61737465723a2067617320746f6f206c6f7720666f818701527f7220706f73744f700000000000000000000000000000000000000000000000006064820152608490fd5b8580fd5b8480fd5b8280fd5b5080fd5b5082346104d15760203660031901126104d1576104f4610f82565b906104fd611037565b6001600160a01b0380921692831561055a5750506000548273ffffffffffffffffffffffffffffffffffffffff19821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b5091819282600319360112610651576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691823b1561064c578390602483518095819363b760faf960e01b8352309083015234905af190811561064357506106305750f35b6106399061108f565b6106405780f35b80fd5b513d84823e3d90fd5b505050fd5b5050fd5b823461064057806003193601126106405761067b33600052600360205260006040812055565b80f35b50346104d55761068d36610fc2565b929092338552600360205281852054151580610797575b1561072e576001600160a01b038084168652600260205282862033600052602052826000206106d48382546113c3565b905582519463a9059cbb60e01b6020870152166024850152604484015260448352608083019083821067ffffffffffffffff8311176107195761067b949550526111cd565b604186634e487b7160e01b6000525260246000fd5b815162461bcd60e51b8152602081880152602960248201527f4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b60448201527f656e4465706f73697400000000000000000000000000000000000000000000006064820152608490fd5b508185205443116106a4565b50346104d557816003193601126104d5578051926370a0823160e01b845230908401526020836024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa918215610843579161080f575b6020925051908152f35b90506020823d821161083b575b81610829602093836110b9565b81010312610378576020915190610805565b3d915061081c565b9051903d90823e3d90fd5b50346104d557806003193601126104d55760209161086a610f82565b82610873610fac565b926001600160a01b03809316815260028652209116600052825280600020549051908152f35b5091819234610651576020366003190112610651576108b6610f82565b6108be611037565b6001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016803b156104c9578592836024928651978895869463611d2e7560e11b865216908401525af190811561064357506106305750f35b5091819234610651578260031936011261065157610939611037565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691823b1561064c57815163bb9fe6bf60e01b81529284918491829084905af190811561064357506106305750f35b50346104d557816003193601126104d557602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346104d55760203660031901126104d557602091816001600160a01b0391826109fc610f82565b168152600185522054169051908152f35b50346104d55760603660031901126104d55782359260038410156104d157602480359067ffffffffffffffff8083116104c957366023840112156104c957828401359081116104c957820136828201116104c9578260a091610a6d6110db565b03126104cd57610a7e818301610f98565b92610a8b60448401610f98565b9260648101359260a46084830135920135926001600160a01b03809716946188b89080820291820403610b7257610ac490604435611152565b838102938185041490151715610b5f578315610b4e5750500493610b1e93909290918291908660028a14610b2357610afe91309084611175565b168552600260205281852090855416600052602052600020918254611152565b905580f35b50828216885260026020528488209060005260205283600020610b478782546113c3565b9055610afe565b634e487b7160e01b89526012905287fd5b601190634e487b7160e01b600052526000fd5b50634e487b7160e01b89526011905287fd5b50346104d557816003193601126104d5573382526003602052439082205580f35b50346104d557816003193601126104d5576001600160a01b0360209254169051908152f35b50346104d557816003193601126104d557602090516188b88152f35b8234610640578060031936011261064057610bff611037565b60006001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508290346104d157806003193601126104d157610c68610f82565b602435926001600160a01b03918285168095036104c9578290610c89611037565b169182865260016020528386205416610cc657508352600160205282209073ffffffffffffffffffffffffffffffffffffffff1982541617905580f35b606490602084519162461bcd60e51b8352820152601160248201527f546f6b656e20616c7265616479207365740000000000000000000000000000006044820152fd5b50346104d55760203660031901126104d557806020926001600160a01b03610d2f610f82565b1681526003845220549051908152f35b50903461064057816003193601126106405781610d5a610f82565b91610d63610fac565b926001600160a01b03809116825260026020528282209316928360005260205281600020549281526003602052205482519182526020820152f35b508290346104d157610daf36610fc2565b929190936001600160a01b039182811691828852600160205283858920541615610e27575090610de885610e0795949330903390611175565b8652600260205281862094169384600052602052600020918254611152565b90553314610e125780f35b61067b33600052600360205260006040812055565b606490602086519162461bcd60e51b8352820152601160248201527f756e737570706f7274656420746f6b656e0000000000000000000000000000006044820152fd5b5091819234610651578060031936011261065157610e86610f82565b610e8e611037565b6001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016803b156104c9578592836044928651978895869463040b850f60e31b8652169084015260243560248401525af190811561064357506106305750f35b50829060203660031901126104d15782823563ffffffff81168091036104d557610f1d611037565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693843b156104d15760249084519586938492621cb65b60e51b845283015234905af19081156106435750610f79575080f35b61067b9061108f565b600435906001600160a01b038216820361037857565b35906001600160a01b038216820361037857565b602435906001600160a01b038216820361037857565b6060906003190112610378576001600160a01b0390600435828116810361037857916024359081168103610378579060443590565b919082519283825260005b848110611023575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611002565b6001600160a01b0360005416330361104b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff81116110a357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176110a357604052565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361110d57565b60405162461bcd60e51b815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152606490fd5b9190820180921161115f57565b634e487b7160e01b600052601160045260246000fd5b9290604051926323b872dd60e01b60208501526001600160a01b03809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff8411176110a3576111cb926040526111cd565b565b6001600160a01b0316906040516040810167ffffffffffffffff90828110828211176110a3576040526020938483527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858401526000808587829751910182855af1903d1561131b573d92831161130757906112699392916040519261125c88601f19601f84011601856110b9565b83523d868885013e611326565b805180611277575b50505050565b818491810103126104d55782015190811591821503610640575061129d57808080611271565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b634e487b7160e01b85526041600452602485fd5b906112699392506060915b91929015611388575081511561133a575090565b3b156113435790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561139b5750805190602001fd5b60405162461bcd60e51b8152602060048201529081906113bf906024830190610ff7565b0390fd5b9190820391821161115f57565b61010060e08201359101358082146113f5574801808210156113f0575090565b905090565b509056fea26469706673582212202f5fe650c4cb99fab30a8ffc16c3c9a51e401bc8483d9868b4ebfc4c0dc66e4164736f6c63430008110033";

type DepositPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositPaymaster__factory extends ContractFactory {
  constructor(...args: DepositPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<DepositPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): DepositPaymaster {
    return super.attach(address) as DepositPaymaster;
  }
  override connect(signer: Signer): DepositPaymaster__factory {
    return super.connect(signer) as DepositPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositPaymasterInterface {
    return new utils.Interface(_abi) as DepositPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositPaymaster {
    return new Contract(address, _abi, signerOrProvider) as DepositPaymaster;
  }
}
