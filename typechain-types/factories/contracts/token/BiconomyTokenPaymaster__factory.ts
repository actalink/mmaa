/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BiconomyTokenPaymaster,
  BiconomyTokenPaymasterInterface,
} from "../../../contracts/token/BiconomyTokenPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CanNotWithdrawToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotBeUnrealisticValue",
    type: "error",
  },
  {
    inputs: [],
    name: "DEXRouterCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "DepositCanNotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "EntryPointCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeReceiverCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokenBalanceZero",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokensWithdrawalFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "TokensAndAmountsLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "VerifyingSignerCannotBeZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_oldOverheadCost",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_newOverheadCost",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_actor",
        type: "address",
      },
    ],
    name: "EPGasOverheadChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldfeeReceiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newfeeReceiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_actor",
        type: "address",
      },
    ],
    name: "FeeReceiverChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "totalCharge",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oracleAggregator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "priceMarkup",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exchangeRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum BiconomyTokenPaymaster.ExchangeRateSource",
        name: "priceSource",
        type: "uint8",
      },
    ],
    name: "TokenPaymasterOperation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "charge",
        type: "uint256",
      },
    ],
    name: "TokenPaymentDue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldSigner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newSigner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_actor",
        type: "address",
      },
    ],
    name: "VerifyingSignerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "UNACCOUNTED_COST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "enum BiconomyTokenPaymaster.ExchangeRateSource",
        name: "priceSource",
        type: "uint8",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleAggregator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exchangeRate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "priceMarkup",
        type: "uint32",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "parsePaymasterAndData",
    outputs: [
      {
        internalType: "enum BiconomyTokenPaymaster.ExchangeRateSource",
        name: "priceSource",
        type: "uint8",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "oracleAggregator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exchangeRate",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "priceMarkup",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newFeeReceiver",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newOverheadCost",
        type: "uint256",
      },
    ],
    name: "setUnaccountedEPGasOverhead",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newVerifyingSigner",
        type: "address",
      },
    ],
    name: "setVerifyingSigner",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
    ],
    name: "withdrawAllNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "withdrawERC20Full",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "token",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
    ],
    name: "withdrawMultipleERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "token",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "withdrawMultipleERC20Full",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x601f62001f7838819003918201601f191660a09081019290916001600160401b038411838510176200013657816060928492604096875283398101031262000131576200004c816200014c565b6020820151916001600160a01b03918284169190828503620001315762000076868593016200014c565b94620000823362000161565b608052620000908162000161565b6001805561afc860025516156200012057156200010f57811615620000fe576003553060045551611dcf9081620001a982396080518181816104d7015281816106680152818161070f015281816107980152818161082e01528181610f960152818161103601526112280152f35b8151638fc6a93160e01b8152600490fd5b825163091748f960e21b8152600490fd5b8351639b15e16f60e01b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200013157565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe604060808152600480361015610048575b50361561001c57600080fd5b513481527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587460203392a2005b600090813560e01c80630396cb6014611005578063205c287814610f5457806323d9ac9b14610f2c57806344004cc114610ef35780635deef2aa14610e43578063617d057a14610d8c578063715018a614610d2557806378b1da2314610c255780638da5cb5b14610bff57806394d4ad6014610b45578063a9a2340914610852578063b0d691fe1461080e578063b3f00674146107e6578063bb9fe6bf14610773578063c23a5cea146106e0578063c399ec8814610634578063c6e7a95714610611578063d0db6f751461055a578063d0e30db0146104b7578063d9f66db11461043a578063deeb3874146103d6578063efdcd97414610368578063f2fde38b1461027d578063f465c77e146101dd5763f5cba98c146101685750610010565b8260203660031901126101d95761017d6110a5565b9161018661117a565b6001600160a01b03908184169283156101cc575050600354169160035533917fe1f62c0e6d7bb6d470828565415bf2e87dbfea50e52d2d753788b529bd0c6d628480a480f35b51638fc6a93160e01b8152fd5b8280fd5b5082346101d9576060916003199083823601126102755780359167ffffffffffffffff831161027957610160908336030112610275576102299161021f61121e565b60243591016115e8565b8291925194859383855280518094860152815b84811061025e5750508383018501526020830152601f01601f19168101030190f35b60208282018101518983018901528896500161023c565b8480fd5b8580fd5b508290346101d95760203660031901126101d9576102996110a5565b906102a261117a565b6001600160a01b038092169283156102ff5750506000548273ffffffffffffffffffffffffffffffffffffffff19821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b508260203660031901126101d95761037e6110a5565b61038661117a565b6001600160a01b038082169283156103c75750835416925533917fff179728e4df4b0421c7de2106b1968d0604e1670493f8da3f907f2d020bb6d58480a480f35b5163193ba87b60e31b81528490fd5b50829060203660031901126101d9578035916103f061117a565b62030d40831161042d575050600254908060025533917f303a4cca6d7dba1a29764b1c0aabac67516608dd37f88e064abc64c24b9c27438480a480f35b51637dabea7560e11b8152fd5b508260203660031901126101d9576104506110a5565b61045861117a565b610460611295565b479081156104a8576001600160a01b03811615610499578480809381935af11561048c57826001805580f35b5163cdf0648960e01b8152fd5b5050516392bc9df360e01b8152fd5b50505163d17e42bf60e01b8152fd5b50819282600319360112610556576104cd611295565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691823b15610551578390602483518095819363b760faf960e01b8352309083015234905af19081156105485750610531575b506001805580f35b61053a906111d2565b610545578038610529565b80fd5b513d84823e3d90fd5b505050fd5b5050fd5b508290346101d957600319906101003683011261060d5780359167ffffffffffffffff83116102755761016090833603011261060d5760243593600285101561054557506044359065ffffffffffff8083168303610608576064359081168103610608576084356001600160a01b039182821682036106085760a43592831683036106085760e4359463ffffffff86168603610608576020986106019760c43596016113ab565b9051908152f35b600080fd5b8380fd5b8284346106305781600319360112610630576020906002549051908152f35b5080fd5b5091346106305781600319360112610630578051926370a0823160e01b845230908401526020836024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9182156106d557916106a1575b6020925051908152f35b90506020823d82116106cd575b816106bb602093836111fc565b81010312610608576020915190610697565b3d91506106ae565b9051903d90823e3d90fd5b50819234610556576020366003190112610556576106fc6110a5565b61070461117a565b6001600160a01b03807f000000000000000000000000000000000000000000000000000000000000000016803b15610279578592836024928651978895869463611d2e7560e11b865216908401525af190811561054857506107635750f35b61076c906111d2565b6105455780f35b5081923461055657826003193601126105565761078e61117a565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691823b1561055157815163bb9fe6bf60e01b81529284918491829084905af190811561054857506107635750f35b50919034610545578060031936011261054557506001600160a01b0360209254169051908152f35b828434610630578160031936011261063057602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b508290346101d95760608060031936011261060d5781359260038410156102755767ffffffffffffffff602435818111610b41576108939036908601611116565b909360e085604435936108a461121e565b81010312610b3d576108b5856110bb565b936020956108c48782016110bb565b6108cf8383016110bb565b9784830135966002881015610b39576108ea60a08501611094565b926001600160a01b039081808c169c169260808701359960018c1480610b1b575b80610b12575b610af2575b6109236002543a906115bf565b8101809111610add57620f424061095763ffffffff670de0b6b3a764000061094d8f6002966115bf565b04991680996115bf565b049f14610a09575081169b5416988551998d885286526bffffffffffffffffffffffff1990871b16602c526f23b872dd000000000000000000000000600c52818d808d5a91601c91606493f18d516001143d151716156109fe578c8652888552885287015260c00135908501528301527f7c405b9cef9e824a5cf31a09e7b8810d01d9db34ee384388f33b438608807e1a9160a0916109fa906080830190611144565ba480f35b508b637939f4248152fd5b98509598509550509650505081879697541692845196868801946323b872dd60e01b86528960248a015260448901528960648901526064885260a088019188831090831117610ac857508452945194169387918291829182885af1923d15610ac0573d610a81610a7882611358565b945194856111fc565b83523d92013e5b15610a94575b50505080f35b7f41614445ea2ab6d87c504bdfc83cb5cb840e7219aa772383baff1ab0dd2a31138480a4818080610a8e565b505050610a88565b604190634e487b7160e01b6000525260246000fd5b5050634e487b7160e01b8f5260118d5260248ffd5b610afe85858516611cb9565b80610b0a575b50610916565b9a5038610b04565b50841515610911565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee85141561090b565b8c80fd5b8780fd5b8680fd5b508290346101d95760203660031901126101d957803567ffffffffffffffff811161060d5792610b89610b8363ffffffff93610ba096369101611116565b906114c6565b98979996909a91958295949395519c8d809c611144565b65ffffffffffff80921660208c015216908901526001600160a01b03809216606089015216608087015260a08601521660c0840152816101008060e0860152840152816101209485850137828201840152601f01601f19168101030190f35b8284346106305781600319360112610630576001600160a01b0360209254169051908152f35b508290816003193601126101d957803567ffffffffffffffff811161060d57610c5190369083016110e5565b610c5c9391936110cf565b93610c6561117a565b610c6d611295565b855b828110610c7e57866001805580f35b6001600160a01b03610c99610c948386866112eb565b611311565b1690845180926370a0823160e01b8252308883015281602460209586935afa928315610d1b578993610ce8575b5050610ce260019288610cdd610c948589896112eb565b611d2e565b01610c6f565b90809350813d8311610d14575b610cff81836111fc565b8101031261060857610ce26001925192610cc6565b503d610cf5565b86513d8b823e3d90fd5b8234610545578060031936011261054557610d3e61117a565b60006001600160a01b03815473ffffffffffffffffffffffffffffffffffffffff1981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508260603660031901126101d95767ffffffffffffffff823581811161027557610db990369085016110e5565b610dc49491946110cf565b92604435908111610b4157610ddc90369084016110e5565b929094610de761117a565b610def611295565b838303610e36575050855b818110610e0957866001805580f35b80610e30610e1d610c94600194868b6112eb565b86610e2984888b6112eb565b3591611d2e565b01610dfa565b51630483384360e11b8152fd5b5082806003193601126101d957610e586110a5565b610e606110cf565b90610e6961117a565b610e71611295565b8251936370a0823160e01b855230908501526020846024816001600160a01b0385165afa928315610eea57508492610eb5575b610eae9350611d2e565b6001805580f35b91506020833d8211610ee2575b81610ecf602093836111fc565b8101031261060857610eae925191610ea4565b3d9150610ec2565b513d86823e3d90fd5b82606036600319011261054557610eae610f0b6110a5565b610f136110cf565b610f1b61117a565b610f23611295565b60443591611d2e565b8284346106305781600319360112610630576020906001600160a01b03600354169051908152f35b509134610630578060031936011261063057610f6e6110a5565b90610f7761117a565b610f7f611295565b6001600160a01b03809216918215610ff5579383947f00000000000000000000000000000000000000000000000000000000000000001692833b156102755760448592838551968794859363040b850f60e31b855284015260243560248401525af1908115610548575061053157506001805580f35b81516392bc9df360e01b81528590fd5b508260203660031901126101d95782823563ffffffff81168091036106305761102c61117a565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693843b156101d95760249084519586938492621cb65b60e51b845283015234905af19081156105485750611088575080f35b611091906111d2565b80f35b359063ffffffff8216820361060857565b600435906001600160a01b038216820361060857565b35906001600160a01b038216820361060857565b602435906001600160a01b038216820361060857565b9181601f840112156106085782359167ffffffffffffffff8311610608576020808501948460051b01011161060857565b9181601f840112156106085782359167ffffffffffffffff8311610608576020838186019501011161060857565b9060028210156111515752565b634e487b7160e01b600052602160045260246000fd5b359065ffffffffffff8216820361060857565b6001600160a01b0360005416330361118e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff81116111e657604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176111e657604052565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361125057565b60405162461bcd60e51b815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152606490fd5b6002600154146112a6576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b91908110156112fb5760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036106085790565b903590601e1981360301821215610608570180359067ffffffffffffffff82116106085760200191813603831361060857565b67ffffffffffffffff81116111e657601f01601f191660200190565b92919261138082611358565b9161138e60405193846111fc565b829481845281830111610608578281602093846000960137010152565b929694919095936113c96113c26040860186611325565b3691611374565b60208151910120916113e16113c26060870187611325565b602081519101209861146a604051998a97602089019c8d9760606001600160a01b039b8c9a8b863516905260208501356040820152015260808d0152608081013560a08d015260a081013560c08d015260c081013560e08d0152610100908c8260e083013591015201356101208c0152466101408c0152306101608c01526101808b0190611144565b65ffffffffffff8092166101a08a0152166101c0880152166101e08601521661020084015261022083015263ffffffff6102409116818301528152610260810181811067ffffffffffffffff8211176111e65760405251902090565b909160d58310611554578260151161060857601482013560f81c600281101561115157928060d511610608576114fe60158401611167565b9161150b60358501611167565b91611518605586016110bb565b91611525607587016110bb565b9161153260b58801611094565b9160d56095890135946001600160a01b038091169616969798019160d4190190565b60405162461bcd60e51b815260206004820152602960248201527f4254504d3a20496e76616c6964206c656e67746820666f72207061796d61737460448201527f6572416e644461746100000000000000000000000000000000000000000000006064820152608490fd5b818102929181159184041417156115d257565b634e487b7160e01b600052601160045260246000fd5b919060a08301356002549384821115611aa95761160c610b83610120830183611325565b916041839e99949592989c979e03611a3e57896116538f878f8a7f19457468657265756d205369676e6564204d6573736167653a0a3332000000009f9388928b89966113ab565b9b60409a8b519560209e8f88019e8f52603c880152603c8752606087019067ffffffffffffffff9e8f898410908411176111e657828f5288519020976080018f8111838210176111e6578e5260009c8d83526001600160a01b0398899182600354169336906116c192611374565b6116ca91611bf2565b6116d390611aee565b16036119ef575087670de0b6b3a76400009261170792888635169560e081013592608060c0830135920135010101026115bf565b049182156119855763ffffffff1696621e8480881161191b57620f424088106118b1578a516370a0823160e01b815260048101839052908516928d82602481875afa9182156118a7579089918c9361186d575b50620f424091611769916115bf565b04116118035789519b8c01528a89015216606089015261178d906080890190611144565b60a087015260c086015260e085015260e08452610100840192848410908411176117ef5750917fffffffffffff00000000000000000000000000000000000000000000000000009165ffffffffffff60a01b93529460d01b169160a01b161790565b634e487b7160e01b81526041600452602490fd5b895162461bcd60e51b8152600481018d9052603060248201527f4254504d3a206163636f756e7420646f6573206e6f74206861766520656e6f7560448201527f676820746f6b656e2062616c616e6365000000000000000000000000000000006064820152608490fd5b8f809294508193503d83116118a0575b61188781836111fc565b8101031261189c5751908890620f424061175a565b8a80fd5b503d61187d565b8c513d8d823e3d90fd5b8a5162461bcd60e51b8152600481018e9052602560248201527f4254504d3a207072696365206d61726b75702070657263656e7461676520746f60448201527f6f206c6f770000000000000000000000000000000000000000000000000000006064820152608490fd5b8a5162461bcd60e51b8152600481018e9052602660248201527f4254504d3a207072696365206d61726b75702070657263656e7461676520746f60448201527f6f206869676800000000000000000000000000000000000000000000000000006064820152608490fd5b8a5162461bcd60e51b8152600481018e9052602560248201527f4254504d3a2063616c63756c6174656420746f6b656e2063686172676520696e60448201527f76616c69640000000000000000000000000000000000000000000000000000006064820152608490fd5b9a5050505050505050505050600194935065ffffffffffff60a01b92507fffffffffffff000000000000000000000000000000000000000000000000000091509560d01b169160a01b16171790565b60405162461bcd60e51b815260206004820152603260248201527f4254504d3a20696e76616c6964207369676e6174757265206c656e677468206960448201527f6e207061796d6173746572416e644461746100000000000000000000000000006064820152608490fd5b60405162461bcd60e51b815260206004820152601c60248201527f4254504d3a2067617320746f6f206c6f7720666f7220706f73744f70000000006044820152606490fd5b60058110156111515780611aff5750565b60018103611b4c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b60028103611b995760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b600314611ba257565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b906041815114600014611c2057611c1c916020820151906060604084015193015160001a90611c2a565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611cad5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611ca05781516001600160a01b03811615611c9a579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600390565b604051633f81538960e11b81526001600160a01b0391821660048201529160209183916024918391165afa60009181611cfb575b50611cf85750600090565b90565b90916020823d8211611d26575b81611d15602093836111fc565b810103126105455750519038611ced565b3d9150611d08565b6001600160a01b039283831615611d8757602092601452603452604460106000809581946fa9059cbb0000000000000000000000008352165af13d156001835114171615611d7b57603452565b806390b8ec1860209252fd5b6040516392bc9df360e01b8152600490fdfea2646970667358221220fe38ad53fb63f48888123d6bd1018b7e8c3fc32d902ac004815bf4cba8049b3f64736f6c63430008110033";

type BiconomyTokenPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BiconomyTokenPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BiconomyTokenPaymaster__factory extends ContractFactory {
  constructor(...args: BiconomyTokenPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<BiconomyTokenPaymaster> {
    return super.deploy(
      _owner,
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    ) as Promise<BiconomyTokenPaymaster>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    );
  }
  override attach(address: string): BiconomyTokenPaymaster {
    return super.attach(address) as BiconomyTokenPaymaster;
  }
  override connect(signer: Signer): BiconomyTokenPaymaster__factory {
    return super.connect(signer) as BiconomyTokenPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BiconomyTokenPaymasterInterface {
    return new utils.Interface(_abi) as BiconomyTokenPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BiconomyTokenPaymaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BiconomyTokenPaymaster;
  }
}
