/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Uniswap3,
  Uniswap3Interface,
} from "../../../../../contracts/token/adapters/UniswapExample.sol/Uniswap3";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "daiAmount",
        type: "uint256",
      },
    ],
    name: "convertEthToExactDai",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "convertExactEthToDai",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "daiAmount",
        type: "uint256",
      },
    ],
    name: "getEstimatedETHforDAI",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "quoter",
    outputs: [
      {
        internalType: "contract IQuoter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610714908161001c8239f35b600080fdfe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c90816341d53ee9146103d4578163735de9f7146103a55781637ed3717f1461016a578163ada8b83d14610091575063c6bbd5a703610011573461008d578160031936011261008d576020905173b27308f9f90d607463bb33ea1bebb41c27ce5ab68152f35b5080fd5b8383602092836003193601126101665781516330d07f2160e01b815273d0a1e359811322d97991e03f863a0c30c2cf029c82820152734f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa6024820152610bb860448201529035606482015260848101839052838160a4818673b27308f9f90d607463bb33ea1bebb41c27ce5ab65af192831561015b5792610127575b5051908152f35b9091508281813d8311610154575b61013f8183610630565b8101031261014f57519083610120565b600080fd5b503d610135565b8251903d90823e3d90fd5b8280fd5b83602084366003190182136101665783359182156103635761018d34151561059d565b600f42019283421161035057908495918351946101a9866105e9565b73d0a1e359811322d97991e03f863a0c30c2cf029c8652734f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa83870152610bb885870152336060870152608086015260a08501523460c08501528460e085015261027d835194631b67c43360e31b86528386019060e0908173ffffffffffffffffffffffffffffffffffffffff9182815116855282602082015116602086015262ffffff60408201511660408601528260608201511660608601526080810151608086015260a081015160a086015260c081015160c0860152015116910152565b73e592427a0aece92de3edee1f18e0157c058615649381816101048134895af1801561034657610317575b5050823b15610312578151630910874560e11b81529284918491829084905af190811561030957506102f2575b508080806102ef9347335af16102e9610652565b50610692565b80f35b6102fb9061061c565b6103065780826102d5565b80fd5b513d84823e3d90fd5b505050fd5b90809295503d831161033f575b61032e8183610630565b8101031261014f57839285806102a8565b503d610324565b84513d88823e3d90fd5b634e487b7160e01b855260118652602485fd5b8490606492519162461bcd60e51b8352820152601a60248201527f4d7573742070617373206e6f6e20302044414920616d6f756e740000000000006044820152fd5b50503461008d578160031936011261008d576020905173e592427a0aece92de3edee1f18e0157c058615648152f35b83838160031936011261008d576103ec34151561059d565b600f420180421161058a57928293825190610406826105e9565b73d0a1e359811322d97991e03f863a0c30c2cf029c8252734f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa6020830152610bb88483015233606083015260808201523460a0820152600160c08201528360e08201526104dd83519163414bf38960e01b83528383019060e0908173ffffffffffffffffffffffffffffffffffffffff9182815116855282602082015116602086015262ffffff60408201511660408601528260608201511660608601526080810151608086015260a081015160a086015260c081015160c0860152015116910152565b73e592427a0aece92de3edee1f18e0157c05861564906020816101048134865af1801561058057610555575b50803b15610312578391835180958193630910874560e11b83525af19081156103095750610546575b506102ef8180808047335af16102e9610652565b61054f9061061c565b81610532565b602090813d8111610579575b61056b8183610630565b810103126103125785610509565b503d610561565b84513d87823e3d90fd5b634e487b7160e01b835260118452602483fd5b156105a457565b60405162461bcd60e51b815260206004820152601a60248201527f4d7573742070617373206e6f6e20302045544820616d6f756e740000000000006044820152606490fd5b610100810190811067ffffffffffffffff82111761060657604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161060657604052565b90601f8019910116810190811067ffffffffffffffff82111761060657604052565b3d1561068d573d9067ffffffffffffffff82116106065760405191610681601f8201601f191660200184610630565b82523d6000602084013e565b606090565b1561069957565b60405162461bcd60e51b815260206004820152600d60248201527f726566756e64206661696c6564000000000000000000000000000000000000006044820152606490fdfea2646970667358221220e010d96a13763671f09e8c741d3ef759f7f5b6f3337f521978e2692c3e45391c64736f6c63430008110033";

type Uniswap3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Uniswap3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Uniswap3__factory extends ContractFactory {
  constructor(...args: Uniswap3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Uniswap3> {
    return super.deploy(overrides || {}) as Promise<Uniswap3>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Uniswap3 {
    return super.attach(address) as Uniswap3;
  }
  override connect(signer: Signer): Uniswap3__factory {
    return super.connect(signer) as Uniswap3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Uniswap3Interface {
    return new utils.Interface(_abi) as Uniswap3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Uniswap3 {
    return new Contract(address, _abi, signerOrProvider) as Uniswap3;
  }
}
