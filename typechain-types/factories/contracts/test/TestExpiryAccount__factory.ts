/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestExpiryAccount,
  TestExpiryAccountInterface,
} from "../../../contracts/test/TestExpiryAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "_after",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_until",
        type: "uint48",
      },
    ],
    name: "addTemporaryOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerAfter",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ownerUntil",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0346100b657601f611d0338819003918201601f19168301916001600160401b038311848410176100bb578084926020946040528339810103126100b657516001600160a01b03811681036100b6573060805260a052604051611c3190816100d282396080518181816104a201528181610aa50152610c15015260a05181818161065501528181610854015281816108fa01528181610d1d01528181610e740152818161111b0152818161171d01526118fd0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806223de29146101be57806301ffc9a7146101b5578063150b7a02146101ac57806318dfb3c7146101a35780633659cfe61461019a5780633a871cdd146101915780633e476951146101885780633fb5a7a11461017f5780634a58db19146101765780634d44560d1461016d5780634f1ef2861461016457806352d1902d1461015b5780638da5cb5b14610152578063b0d691fe14610149578063b61d27f614610140578063bc197c8114610137578063c399ec881461012e578063c4d66de814610125578063cf6dca551461011c578063d087d288146101135763f23a6e610361000e5761010e611191565b61000e565b5061010e6110e3565b5061010e610ff9565b5061010e610ee1565b5061010e610e45565b5061010e610db4565b5061010e610d41565b5061010e610cfc565b5061010e610cd1565b5061010e610bf9565b5061010e610a4e565b5061010e6108c6565b5061010e61083c565b5061010e6107f5565b5061010e6107ae565b5061010e610617565b5061010e610478565b5061010e610375565b5061010e6102e8565b5061010e610279565b5061010e61020b565b6001600160a01b038116036101d857565b600080fd5b9181601f840112156101d85782359167ffffffffffffffff83116101d857602083818601950101116101d857565b50346101d85760c03660031901126101d8576102286004356101c7565b6102336024356101c7565b61023e6044356101c7565b67ffffffffffffffff6084358181116101d85761025f9036906004016101dd565b505060a4359081116101d8576100199036906004016101dd565b50346101d85760203660031901126101d85760043563ffffffff60e01b81168091036101d857602090630a85bd0160e11b81149081156102d7575b81156102c6575b506040519015158152f35b6301ffc9a760e01b149050386102bb565b630271189760e51b811491506102b4565b50346101d85760803660031901126101d8576103056004356101c7565b6103106024356101c7565b60643567ffffffffffffffff81116101d8576103309036906004016101dd565b5050604051630a85bd0160e11b8152602090f35b9181601f840112156101d85782359167ffffffffffffffff83116101d8576020808501948460051b0101116101d857565b50346101d85760403660031901126101d85767ffffffffffffffff600480358281116101d8576103a89036908301610344565b60249291929384359081116101d8576103c49036908401610344565b6103cc611712565b8083036104355760005b8381106103df57005b6104106103f56103f083878a61168d565b6116ab565b61040a6104038486886116e8565b3691610a17565b906117a4565b6000198114610421576001016103d6565b86601186634e487b7160e01b600052526000fd5b60405162461bcd60e51b81526020818601526013818801527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152606490fd5b50346101d85760203660031901126101d857600435610496816101c7565b6001600160a01b0390817f000000000000000000000000000000000000000000000000000000000000000016916104cf833014156111ed565b6104fe7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc93828554161461125f565b6105066117c4565b6040519061051382610992565b600082527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561054d575050610019915061135f565b6020600491604094939451928380926352d1902d60e01b825286165afa600091816105e7575b506105d45760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b610019936105e291146112ed565b611425565b61060991925060203d8111610610575b61060181836109ca565b8101906112d1565b9038610573565b503d6105f7565b50346101d8576003196060368201126101d8576004359067ffffffffffffffff82116101d8576101609082360301126101d8576001600160a01b03807f0000000000000000000000000000000000000000000000000000000000000000163303610769576106ef61074a916106e7610765946106e161040360405160208101907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252602435603c820152603c81526106cf816109ae565b519020926101448101906004016116b5565b90611ab6565b929092611996565b8116600052600260205261073a61072e610714604060002065ffffffffffff90541690565b926001600160a01b03166000526001602052604060002090565b5465ffffffffffff1690565b9065ffffffffffff811615611b7a565b61075560443561165b565b6040519081529081906020820190565b0390f35b60405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606490fd5b50346101d85760203660031901126101d8576001600160a01b036004356107d4816101c7565b166000526002602052602065ffffffffffff60406000205416604051908152f35b50346101d85760203660031901126101d8576001600160a01b0360043561081b816101c7565b166000526001602052602065ffffffffffff60406000205416604051908152f35b506000806003193601126108c3576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681813b156108c35760405163b760faf960e01b8152306004820152918290602490829034905af180156108b6575b6108aa575080f35b6108b390610971565b80f35b6108be6112e0565b6108a2565b80fd5b50346101d857600060403660031901126108c3576004356108e6816101c7565b6108ee6117c4565b816001600160a01b03807f00000000000000000000000000000000000000000000000000000000000000001692833b156109565760449083604051958694859363040b850f60e31b855216600484015260243560248401525af180156108b6576108aa575080f35b8280fd5b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161098557604052565b61098d61095a565b604052565b6020810190811067ffffffffffffffff82111761098557604052565b6060810190811067ffffffffffffffff82111761098557604052565b90601f8019910116810190811067ffffffffffffffff82111761098557604052565b60209067ffffffffffffffff8111610a0a575b601f01601f19160190565b610a1261095a565b6109ff565b929192610a23826109ec565b91610a3160405193846109ca565b8294818452818301116101d8578281602093846000960137010152565b5060403660031901126101d857600435610a67816101c7565b60243567ffffffffffffffff81116101d857366023820112156101d857610a98903690602481600401359101610a17565b906001600160a01b0391827f00000000000000000000000000000000000000000000000000000000000000001692610ad2843014156111ed565b610b017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc94828654161461125f565b610b096117c4565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610b3f575050610019915061135f565b6020600491604094939451928380926352d1902d60e01b825286165afa60009181610bd9575b50610bc65760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b61001993610bd491146112ed565b6114f7565b610bf291925060203d81116106105761060181836109ca565b9038610b65565b50346101d85760003660031901126101d8576001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c66576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b50346101d85760003660031901126101d85760206001600160a01b0360005460101c16604051908152f35b50346101d85760003660031901126101d85760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346101d85760603660031901126101d857600435610d5f816101c7565b60443567ffffffffffffffff81116101d857600091610d8e610d86849336906004016101dd565b610403611712565b9060208251920190602435905af1610da461154a565b9015610dac57005b602081519101fd5b50346101d85760a03660031901126101d857610dd16004356101c7565b610ddc6024356101c7565b67ffffffffffffffff6044358181116101d857610dfd903690600401610344565b50506064358181116101d857610e17903690600401610344565b50506084359081116101d857610e319036906004016101dd565b505060405163bc197c8160e01b8152602090f35b50346101d85760003660031901126101d8576040516370a0823160e01b815230600482015260209081816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610ed4575b600091610eb7575b50604051908152f35b610ece9150823d81116106105761060181836109ca565b38610eae565b610edc6112e0565b610ea6565b50346101d85760203660031901126101d857600435610eff816101c7565b610f4360005491610f2760ff8460081c161580948195610fc1575b8115610fa1575b50611831565b82610f3a600160ff196000541617600055565b610f88576118a3565b610f4957005b610f5961ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b610f9c61010061ff00196000541617600055565b6118a3565b303b15915081610fb3575b5038610f21565b6001915060ff161438610fac565b600160ff8216109150610f1a565b6024359065ffffffffffff821682036101d857565b6044359065ffffffffffff821682036101d857565b50346101d85760603660031901126101d857600435611017816101c7565b61101f610fcf565b90611028610fe4565b906110316117c4565b65ffffffffffff808416908316111561109e57610019926001600160a01b0361107b9216600052600160205260406000209065ffffffffffff1665ffffffffffff19825416179055565b600260205260406000209065ffffffffffff1665ffffffffffff19825416179055565b60405162461bcd60e51b815260206004820152601160248201527f77726f6e6720756e74696c2f61667465720000000000000000000000000000006044820152606490fd5b50346101d85760003660031901126101d857604051631aab3f0d60e11b815230600482015260006024820152610765906020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611184575b600091611166575b506040519081529081906020820190565b61117e915060203d81116106105761060181836109ca565b38611155565b61118c6112e0565b61114d565b50346101d85760a03660031901126101d8576111ae6004356101c7565b6111b96024356101c7565b60843567ffffffffffffffff81116101d8576111d99036906004016101dd565b505060405163f23a6e6160e01b8152602090f35b156111f457565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608490fd5b1561126657565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608490fd5b908160209103126101d8575190565b506040513d6000823e3d90fd5b156112f457565b60405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608490fd5b803b156113ba576001600160a01b037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608490fd5b9061142f8261135f565b6001600160a01b0382167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28051158015906114ef575b611471575050565b6114ec9160008060405193611485856109ae565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af46114e661154a565b916115c6565b50565b506000611469565b906115018261135f565b6001600160a01b0382167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511580159061154257611471575050565b506001611469565b3d15611575573d9061155b826109ec565b9161156960405193846109ca565b82523d6000602084013e565b606090565b1561158157565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b919290156115e957508151156115da575090565b6115e6903b151561157a565b90565b8251909150156115fc5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510611642575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061161f565b806116635750565b600080808093338219f1506114ec61154a565b50634e487b7160e01b600052603260045260246000fd5b919081101561169e575b60051b0190565b6116a6611676565b611697565b356115e6816101c7565b903590601e19813603018212156101d8570180359067ffffffffffffffff82116101d8576020019181360383136101d857565b909161170192811015611705575b60051b8101906116b5565b9091565b61170d611676565b6116f6565b6001600160a01b03807f0000000000000000000000000000000000000000000000000000000000000000163314908115611793575b501561174f57565b606460405162461bcd60e51b815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b905060005460101c16331438611747565b600091829182602083519301915af16117bb61154a565b9015610dac5750565b6001600160a01b0360005460101c1633148015611828575b156117e357565b60405162461bcd60e51b815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606490fd5b503033146117dc565b1561183857565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608490fd5b60009081547fffffffffffffffffffff0000000000000000000000000000000000000000ffff75ffffffffffffffffffffffffffffffffffffffff00008360101b16911617908183556001600160a01b03809260101c16827f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de8580a36119496117c4565b168152600160205265ffffffffffff60408083209282199384815416905560026020522091825416179055565b6005111561198057565b634e487b7160e01b600052602160045260246000fd5b61199f81611976565b806119a75750565b6119b081611976565b600181036119fd5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b611a0681611976565b60028103611a535760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b80611a5f600392611976565b14611a6657565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b906041815114600014611ae057611701916020820151906060604084015193015160001a90611aea565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611b6e5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa15611b61575b81516001600160a01b03811615611b5b579190565b50600190565b611b696112e0565b611b46565b50505050600090600390565b90919060009015611bc7575060ff65ffffffffffff60a01b7fffffffffffff00000000000000000000000000000000000000000000000000006001935b60d01b169360a01b169116171790565b65ffffffffffff60a01b7fffffffffffff000000000000000000000000000000000000000000000000000060ff9293611bb756fea2646970667358221220880e097eadfb7c604961ae251f52d74a25c1d079161f792f94ffecad288d596764736f6c63430008110033";

type TestExpiryAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestExpiryAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestExpiryAccount__factory extends ContractFactory {
  constructor(...args: TestExpiryAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestExpiryAccount> {
    return super.deploy(
      anEntryPoint,
      overrides || {}
    ) as Promise<TestExpiryAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override attach(address: string): TestExpiryAccount {
    return super.attach(address) as TestExpiryAccount;
  }
  override connect(signer: Signer): TestExpiryAccount__factory {
    return super.connect(signer) as TestExpiryAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestExpiryAccountInterface {
    return new utils.Interface(_abi) as TestExpiryAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestExpiryAccount {
    return new Contract(address, _abi, signerOrProvider) as TestExpiryAccount;
  }
}
