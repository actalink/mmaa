/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestUniswap,
  TestUniswapInterface,
} from "../../../contracts/test/TestUniswap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract TestWrappedNativeToken",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "StubUniswapExchangeEvent",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactInputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactOutputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "unwrapWETH9",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract TestWrappedNativeToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60803461007457601f61061738819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161058790816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060409080825260049182361015610023575b505050361561002157600080fd5b005b600091823560e01c9081633fc8cef31461049757508063414bf3891461039957806349404b7c146102095763db3e2198036100135734610205576101003660031901126102055760c4359160041983019283116101f25760a4357f29a1b057b49189ad91f5d92216fc55e37caf33e398f9e914469523c9aa5f6a036100a66104ba565b6100ae6104d5565b8551878152602081018590526001600160a01b03928316604082015291166060820152608090a16001600160a01b0394856100e76104ba565b85516323b872dd60e01b81523384820190815230602080830191909152604082018a9052999391928a9284928390036060019183918a91165af180156101e8579188939161017b9695936101cb575b5061013f6104d5565b16908461014a6104eb565b9188519788958694859363a9059cbb60e01b85528401602090939291936001600160a01b0360408201951681520152565b03925af19081156101c05750610193575b5051908152f35b6101b290843d86116101b9575b6101aa8183610501565b810190610539565b503861018c565b503d6101a0565b8351903d90823e3d90fd5b6101e190853d87116101b9576101aa8183610501565b5038610136565b86513d87823e3d90fd5b634e487b7160e01b815260118452602490fd5b5080fd5b50828160031936011261030d576024356001600160a01b03808216809203610395578454168351926370a0823160e01b84523081850152602084602481855afa93841561038b578694610354575b5080358410610311578590841592831561026f578280f35b803b1561030d5782906024885180958193632e1a7d4d60e01b83528a878401525af18015610303576102cf575b50508480938193829383906102c6575bf1156102bc578080808481808280f35b51903d90823e3d90fd5b506108fc6102ac565b67ffffffffffffffff829793949597116102f057508452939190858061029c565b634e487b7160e01b835260419052602482fd5b86513d89823e3d90fd5b8280fd5b606490602086519162461bcd60e51b8352820152601260248201527f496e73756666696369656e7420574554483900000000000000000000000000006044820152fd5b9093506020813d8211610383575b8161036f60209383610501565b8101031261037f57519286610257565b8580fd5b3d9150610362565b85513d88823e3d90fd5b8480fd5b5034610205576101003660031901126102055760c43591600583018093116101f25761046c9360a4357f29a1b057b49189ad91f5d92216fc55e37caf33e398f9e914469523c9aa5f6a036103eb6104ba565b6103f36104d5565b8651848152602081018990526001600160a01b03928316604082015291166060820152608090a16001600160a01b03908161042c6104ba565b1690855180926323b872dd60e01b825281878160209c8d9630338c85016040919493929460608201956001600160a01b0380921683521660208201520152565b03925af1801561048d57928792879261017b96956101cb575061013f6104d5565b85513d86823e3d90fd5b8390346102055781600319360112610205576001600160a01b0360209254168152f35b6004356001600160a01b03811681036104d05790565b600080fd5b6024356001600160a01b03811681036104d05790565b6064356001600160a01b03811681036104d05790565b90601f8019910116810190811067ffffffffffffffff82111761052357604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126104d0575180151581036104d0579056fea26469706673582212205b64743ce027c38b989e2a92057a301ba5fc3c4430c5de5ce52d32eee849d4b964736f6c63430008110033";

type TestUniswapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswap__factory extends ContractFactory {
  constructor(...args: TestUniswapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestUniswap> {
    return super.deploy(_weth, overrides || {}) as Promise<TestUniswap>;
  }
  override getDeployTransaction(
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_weth, overrides || {});
  }
  override attach(address: string): TestUniswap {
    return super.attach(address) as TestUniswap;
  }
  override connect(signer: Signer): TestUniswap__factory {
    return super.connect(signer) as TestUniswap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapInterface {
    return new utils.Interface(_abi) as TestUniswapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUniswap {
    return new Contract(address, _abi, signerOrProvider) as TestUniswap;
  }
}
