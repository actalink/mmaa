/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EntryPoint,
  EntryPointInterface,
} from "../../../contracts/core/EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BeforeExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    name: "nonceSequenceNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a08060405234620000895760016002556101b98181016001600160401b038111838210176200007357829162004985833903906000f0801562000067576080526040516148f690816200008f8239608051818181610fd80152818161315001526133b90152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610023575b361561001957600080fd5b61002161435e565b005b60003560e01c80630396cb60146101b35780630bd28e3b146101aa5780631b2e01b8146101a15780631d732756146101985780631fad948c1461018f578063205c28781461018657806335567e1a1461017d5780634b1d7cf5146101745780635287ce121461016b57806370a08231146101625780638f41ec5a14610159578063957122ab146101505780639b249f6914610147578063a61935311461013e578063b760faf914610135578063bb9fe6bf1461012c578063c23a5cea14610123578063d6383f941461011a578063ee219423146101115763fc7e286d0361000e5761010c6115fd565b61000e565b5061010c611458565b5061010c611334565b5061010c6111fc565b5061010c6110da565b5061010c6110b9565b5061010c611098565b5061010c610f74565b5061010c610e0d565b5061010c610df0565b5061010c610d9d565b5061010c610c86565b5061010c610990565b5061010c61091e565b5061010c6107fd565b5061010c610723565b5061010c6105aa565b5061010c6103bc565b5061010c610327565b50602036600319011261030c5760043563ffffffff811680820361030c576103077fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0191610246610216336001600160a01b03166000526000602052604060002090565b91610222811515614464565b61023f610236600185015463ffffffff1690565b63ffffffff1690565b11156144b0565b54926102e96001600160701b03946102b461026634888460781c16611aa8565b966102728815156144fc565b61027e81891115614548565b61029b8161028a6104cd565b941684906001600160701b03169052565b6001602084015287166001600160701b03166040830152565b63ffffffff83166060820152600060808201526102e4336001600160a01b03166000526000602052604060002090565b614594565b6040805194855263ffffffff90911660208501523393918291820190565b0390a2005b600080fd5b602435906001600160c01b038216820361030c57565b503461030c57602036600319011261030c576004356001600160c01b038116810361030c57610376903360005260016020526040600020906001600160c01b0316600052602052604060002090565b6103808154611ca7565b9055005b6001600160a01b0381160361030c57565b602435906103a282610384565b565b60c435906103a282610384565b35906103a282610384565b503461030c57604036600319011261030c5760206104156004356103df81610384565b6001600160a01b036103ef610311565b9116600052600183526040600020906001600160c01b0316600052602052604060002090565b54604051908152f35b50634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761045157604052565b61045961041e565b604052565b610100810190811067ffffffffffffffff82111761045157604052565b67ffffffffffffffff811161045157604052565b6060810190811067ffffffffffffffff82111761045157604052565b90601f8019910116810190811067ffffffffffffffff82111761045157604052565b604051906103a282610435565b6040519060c0820182811067ffffffffffffffff82111761045157604052565b604051906040820182811067ffffffffffffffff82111761045157604052565b60209067ffffffffffffffff8111610538575b601f01601f19160190565b61054061041e565b61052d565b9291926105518261051a565b9161055f60405193846104ab565b82948184528183011161030c578281602093846000960137010152565b9181601f8401121561030c5782359167ffffffffffffffff831161030c576020838186019501011161030c57565b503461030c576101c036600319011261030c5767ffffffffffffffff60043581811161030c573660238201121561030c576105ef903690602481600401359101610545565b903660231901610180811261030c576101006040519161060e83610435565b1261030c5760405161061f8161045e565b610627610395565b815260443560208201526064356040820152608435606082015260a43560808201526106516103a4565b60a082015260e43560c08201526101043560e082015281526101243560208201526101443560408201526101643560608201526101843560808201526101a43591821161030c576106c5926106ad6106b593369060040161057c565b929091611fd5565b6040519081529081906020820190565b0390f35b90604060031983011261030c5760043567ffffffffffffffff9283821161030c578060238301121561030c57816004013593841161030c5760248460051b8301011161030c57602401919060243561072081610384565b90565b503461030c57610732366106c9565b61073d9291926117e5565b6107468361172b565b60005b8481106107c657506000927fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9728480a183915b8583106107965761078c8585611869565b6100216001600255565b9091936001906107bc6107aa8789876117b4565b6107b48886611792565b519088611bb4565b019401919061077b565b806107f46107ed6107db600194869896611792565b516107e7848a886117b4565b84612942565b908361255f565b01929092610749565b503461030c57604036600319011261030c5760043561081b81610384565b6024359060009133835282602052604083206001600160701b03815416928383116108d95784836001600160a01b03829593610889849661086f61086387986108d69c611a93565b6001600160701b031690565b6001600160701b03166001600160701b0319825416179055565b604080516001600160a01b03831681526020810185905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a2165af16108d0611839565b50614828565b80f35b60405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606490fd5b503461030c57604036600319011261030c57602060043561093e81610384565b6001600160a01b0361094e610311565b911660005260018252610978816040600020906001600160c01b0316600052602052604060002090565b546040805192901b67ffffffffffffffff1916178152f35b503461030c5761099f366106c9565b6109a76117e5565b6000805b838210610b74576109bc915061172b565b7fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972600080a16000805b848110610ae757505060008093815b818110610a2b5761078c868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8180a2611869565b610a82610a3982848a611cc3565b610a57610a4b610a4b60208401611d29565b6001600160a01b031690565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d600080a280611cf3565b906000915b808310610a9f57505050610a9a90611ca7565b6109f4565b90919497610ada610ad4610ae092610ace8c8b610ac782610ac18e8b8d6117b4565b92611792565b5191611bb4565b90611aa8565b99611ca7565b95611ca7565b9190610a87565b610af2818688611cc3565b6020610b0a610b018380611cf3565b92909301611d29565b916001600160a01b0360009316905b828410610b325750505050610b2d90611ca7565b6109e5565b90919294610ada81610b6785610b60610b4e610b6c968d611792565b51610b5a8c8b8a6117b4565b85612942565b908b6126d8565b611ca7565b929190610b19565b610b7f828587611cc3565b90610b8a8280611cf3565b92610b9a610a4b60208301611d29565b916001600160a01b038316610bb26001821415611d33565b610bd3575b505050610bcd91610bc791611aa8565b91611ca7565b906109ab565b909592610bec604099969399989598978881019061191b565b92908a3b1561030c5789938b918a51938492839263e3563a4f60e01b845260049e8f850193610c1a94611e89565b03815a93600094fa9081610c6d575b50610c5757865163086a9f7560e41b81526001600160a01b038a16818a0190815281906020010390fd5b0390fd5b9497509295509093509181610bc7610bcd610bb7565b80610c7a610c809261047b565b80610de5565b38610c29565b503461030c57602036600319011261030c576106c56001600160a01b03600435610caf81610384565b608060409283928351610cc181610435565b600093818580935282602082015282878201528260608201520152168152806020522090610d4965ffffffffffff6001835194610cfd86610435565b80546001600160701b038082168852607082901c60ff161515602089015260789190911c1685870152015463ffffffff8116606086015260201c16608084019065ffffffffffff169052565b5191829182919091608065ffffffffffff8160a08401956001600160701b03808251168652602082015115156020870152604082015116604086015263ffffffff6060820151166060860152015116910152565b503461030c57602036600319011261030c576001600160a01b03600435610dc381610384565b16600052600060205260206001600160701b0360406000205416604051908152f35b600091031261030c57565b503461030c57600036600319011261030c57602060405160018152f35b503461030c57606036600319011261030c57600467ffffffffffffffff813581811161030c57610e40903690840161057c565b905060243591610e4f83610384565b60443590811161030c57610e66903690850161057c565b929091159081610f6a575b50610f1d576014821015610ea7575b610c538360405191829162461bcd60e51b8352820160409060208152600060208201520190565b610eb7610ec392610ebd92612234565b90612242565b60601c90565b3b15610ed0573880610e80565b610c539060405191829162461bcd60e51b8352820160609060208152601b60208201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060408201520190565b610c538360405191829162461bcd60e51b8352820160609060208152601960208201527f41413230206163636f756e74206e6f74206465706c6f7965640000000000000060408201520190565b90503b1538610e71565b503461030c57602036600319011261030c5760043567ffffffffffffffff811161030c57610fa8602491369060040161057c565b604051632b870d1b60e11b8152918291610fc591600484016123b8565b036020826001600160a01b0392816000857f0000000000000000000000000000000000000000000000000000000000000000165af1918215611051575b600092611021575b50604051633653dc0360e11b815291166004820152fd5b61104391925060203d811161104a575b61103b81836104ab565b8101906123a3565b903861100a565b503d611031565b611059611a6f565b611002565b908161016091031261030c5790565b602060031982011261030c576004359067ffffffffffffffff821161030c576107209160040161105e565b503461030c5760206110b16110ac3661106d565b6120f0565b604051908152f35b50602036600319011261030c576100216004356110d581610384565b61440c565b503461030c576000806003193601126111f9573381528060205260408120600181019063ffffffff8254169081156111b45761116161113b6111799361112d611128855460ff9060701c1690565b614692565b65ffffffffffff42166146de565b845469ffffffffffff000000001916602082901b69ffffffffffff000000001617909455565b80546eff000000000000000000000000000019169055565b60405165ffffffffffff91909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a280f35b60405162461bcd60e51b815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152606490fd5b80fd5b503461030c57602036600319011261030c5760043561121a81610384565b6108d66001600160a01b03611242336001600160a01b03166000526000602052604060002090565b926112de61125e61086386546001600160701b039060781c1690565b9461126a8615156146f8565b6112b6600182016112a365ffffffffffff61128f835465ffffffffffff9060201c1690565b1661129b811515614744565b421015614790565b805469ffffffffffffffffffff19169055565b7fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff8154169055565b604080516001600160a01b03831681526020810186905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda391a2600080809581948294165af161132e611839565b506147dc565b503461030c57606036600319011261030c5767ffffffffffffffff60043581811161030c5761136790369060040161105e565b6024359161137483610384565b60443590811161030c5761138f610c5391369060040161057c565b6113976116a8565b6113a08561248c565b6113b36113ad828761279d565b90614226565b946113c382600092438452611ab5565b9643825281936060956001600160a01b038316611424575b50505050608001519361140a60406113fc602084015165ffffffffffff1690565b92015165ffffffffffff1690565b90604051968796630116f59360e71b885260048801611f1e565b8395508394965061143e6040949293945180948193611f10565b03925af190608061144d611839565b9291903880806113db565b503461030c576114673661106d565b61146f6116a8565b6114788261248c565b611482818361279d565b825160a001519193916114a2906001600160a01b031661431d565b61431d565b906114b961149d85516001600160a01b0390511690565b946114c26121fc565b506114f16114d56040958681019061191b565b906000601483106115f55750610eb761149d92610ebd92612234565b916114fb91614226565b80516001600160a01b0316906001600160a01b038216600181149160808801519787810151918860208201516115369065ffffffffffff1690565b91015165ffffffffffff1691606001519261154f6104da565b9a8b5260208b0152841515898b015265ffffffffffff1660608a015265ffffffffffff16608089015260a0880152151590816115ec575b506115a75750610c53925194859463e0cff05f60e01b865260048601612349565b9190610c53936115b68461431d565b6115d06115c16104fa565b6001600160a01b039096168652565b602085015251633ebb2d3960e21b8152958695600487016122c4565b90501538611586565b91505061431d565b503461030c57602036600319011261030c576001600160a01b0360043561162381610384565b16600052600060205260a0604060002065ffffffffffff60018254920154604051926001600160701b0390818116855260ff8160701c161515602086015260781c16604084015263ffffffff8116606084015260201c166080820152f35b60209067ffffffffffffffff811161169b575b60051b0190565b6116a361041e565b611694565b604051906116b582610435565b604051608083610100830167ffffffffffffffff81118482101761171e575b60405260009283815283602082015283604082015283606082015283838201528360a08201528360c08201528360e082015281528260208201528260408201528260608201520152565b61172661041e565b6116d4565b9061173582611681565b61174260405191826104ab565b8281528092611753601f1991611681565b019060005b82811061176457505050565b60209061176f6116a8565b82828501015201611758565b50634e487b7160e01b600052603260045260246000fd5b60209181518110156117a7575b60051b010190565b6117af61177b565b61179f565b91908110156117d8575b60051b8101359061015e198136030182121561030c570190565b6117e061177b565b6117be565b60028054146117f45760028055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b3d15611864573d9061184a8261051a565b9161185860405193846104ab565b82523d6000602084013e565b606090565b6001600160a01b031680156118d657600080809381935af1611889611839565b501561189157565b60405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606490fd5b903590601e198136030182121561030c570180359067ffffffffffffffff821161030c5760200191813603831361030c57565b9081602091031261030c575190565b908060209392818452848401376000828201840152601f01601f1916010190565b60005b8381106119915750506000910152565b8181015183820152602001611981565b906020916119ba8151809281855285808601910161197e565b601f01601f1916010190565b906119e060809161072096946101c080865285019161195d565b9360e081516001600160a01b0380825116602087015260208201516040870152604082015160608701526060820151858701528482015160a087015260a08201511660c086015260c081015182860152015161010084015260208101516101208401526040810151610140840152606081015161016084015201516101808201526101a08184039101526119a1565b506040513d6000823e3d90fd5b50634e487b7160e01b600052601160045260246000fd5b91908203918211611aa057565b6103a2611a7c565b91908201809211611aa057565b905a91816020611ace606083015193606081019061191b565b90611aee856040519586948594630eb993ab60e11b8652600486016119c6565b03816000305af160009181611b84575b50611b7d575060206000803e60005163deaddead60e01b14611b3c57611b36611b2b610720945a90611a93565b608084015190611aa8565b91613b28565b60408051631101335b60e11b8152600060048201526024810191909152600f60448201526e41413935206f7574206f662067617360881b6064820152608490fd5b9250505090565b611ba691925060203d8111611bad575b611b9e81836104ab565b81019061194e565b9038611afe565b503d611b94565b909291925a93806020611bd0606083015194606081019061191b565b90611bf0866040519586948594630eb993ab60e11b8652600486016119c6565b03816000305af160009181611c87575b50611c80575060206000803e60005163deaddead60e01b14611c3f57611c39611c2e61072095965a90611a93565b608083015190611aa8565b92613d6a565b60408051631101335b60e11b8152600481018590526024810191909152600f60448201526e41413935206f7574206f662067617360881b6064820152608490fd5b9450505050565b611ca091925060203d8111611bad57611b9e81836104ab565b9038611c00565b6001906000198114611cb7570190565b611cbf611a7c565b0190565b9190811015611ce6575b60051b81013590605e198136030182121561030c570190565b611cee61177b565b611ccd565b903590601e198136030182121561030c570180359067ffffffffffffffff821161030c57602001918160051b3603831361030c57565b3561072081610384565b15611d3a57565b60405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152606490fd5b9035601e198236030181121561030c57016020813591019167ffffffffffffffff821161030c57813603831361030c57565b61072091611dcf81611dc2846103b1565b6001600160a01b03169052565b60208201356020820152611e6a611e1b611e00611def6040860186611d7f565b61016080604088015286019161195d565b611e0d6060860186611d7f565b90858303606087015261195d565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e08401526101008085013590840152610120611e5d81860186611d7f565b918584039086015261195d565b91611e7b6101409182810190611d7f565b92909181850391015261195d565b949391929083604087016040885252606086019360608160051b8801019482600090815b848310611ecc575050505050508460206107209596850391015261195d565b909192939497605f198b8203018552883561015e1984360301811215611f0c5760019184611efa9201611db1565b98602090810196950193019190611ead565b8280fd5b908092918237016000815290565b92909361072096959260c0958552602085015265ffffffffffff8092166040850152166060830152151560808201528160a082015201906119a1565b15611f6157565b60405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152606490fd5b906040610720926000815281602082015201906119a1565b6040906107209392815281602082015201906119a1565b909291925a93611fe6303314611f5a565b8151946040860151955a6113886060830151890101116120df5761072096600095805161202d575b50505090612027915a9003608084015101943691610545565b91613f4f565b61204f9161204b9161204685516001600160a01b031690565b61487f565b1590565b61205b575b808061200e565b6120279291945061206a614891565b90815161207e575b50506001939091612054565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a2016001600160a01b036020870151926120d560206120c383516001600160a01b031690565b92015195604051938493169683611fbe565b0390a33880612072565b63deaddead60e01b60005260206000fd5b612106612100604083018361191b565b90614874565b90612117612100606083018361191b565b906121b361212c61210061012084018461191b565b60405194859360208501956101008201359260e08301359260c08101359260a0820135926080830135926001600160a01b0360208201359135168c9693909a999895926101209895926001600160a01b036101408a019d168952602089015260408801526060870152608086015260a085015260c084015260e08301526101008201520152565b03916121c7601f19938481018352826104ab565b519020604080516020810192835230918101919091524660608201526080928301815290916121f690826104ab565b51902090565b604051906040820182811067ffffffffffffffff821117612227575b60405260006020838281520152565b61222f61041e565b612218565b9060141161030c5790601490565b6bffffffffffffffffffffffff19903581811693926014811061226457505050565b60140360031b82901b16169150565b9060c060a061072093805184526020810151602085015260408101511515604085015265ffffffffffff80606083015116606086015260808201511660808501520151918160a082015201906119a1565b92946123256103a2956123136101009599986123016122ed602097610140808c528b0190612273565b9b878a019060208091805184520151910152565b80516060890152602001516080880152565b805160a08701526020015160c0860152565b6001600160a01b0381511660e0850152015191019060208091805184520151910152565b6123926103a29461238061236b60a0959998969960e0865260e0860190612273565b98602085019060208091805184520151910152565b80516060840152602001516080830152565b019060208091805184520151910152565b9081602091031261030c575161072081610384565b91602061072093818152019161195d565b906123eb6001600160a01b03916107209795969460608552606085019161195d565b94166020820152604081850391015261195d565b60009060033d1161240c57565b905060046000803e60005160e01c90565b600060443d1061072057604051600319913d83016004833e815167ffffffffffffffff918282113d60248401111761247b57818401948551938411612483573d8501016020848701011161247b5750610720929101602001906104ab565b949350505050565b50949350505050565b612499604082018261191b565b6124b16124a584611d29565b9361012081019061191b565b9290303b1561030c576000936124dc91604051968795869563957122ab60e01b8752600487016123c9565b0381305afa908161254c575b506103a25760016124f76123ff565b6308c379a014612510575b61250857565b6103a2611a6f565b61251861241d565b80612524575b50612502565b8051600092501561251e57604051631101335b60e11b8152908190610c539060048301611fa6565b80610c7a6125599261047b565b386124e8565b919061256a90612702565b6001600160a01b03929183166126895761263a5761258790612702565b91166125eb576125945750565b60408051631101335b60e11b815260048101929092526024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f742064756064820152606560f81b608482015260a490fd5b60408051631101335b60e11b8152600481018490526024810191909152601460448201527f41413334207369676e6174757265206572726f720000000000000000000000006064820152608490fd5b60408051631101335b60e11b8152600481018590526024810191909152601760448201527f414132322065787069726564206f72206e6f74206475650000000000000000006064820152608490fd5b60408051631101335b60e11b8152600481018690526024810191909152601460448201527f41413234207369676e6174757265206572726f720000000000000000000000006064820152608490fd5b9291906126e490612702565b90926001600160a01b03808095169116036126895761263a57612587905b801561274857612711906141d8565b6001600160a01b0365ffffffffffff806040840151164211908115612738575b5091511691565b9050602083015116421038612731565b50600090600090565b1561275857565b60405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152606490fd5b916000915a938151906127b08282612b35565b6127b9816120f0565b60208401526127f76effffffffffffffffffffffffffffff60808401516060850151176040850151176101008401359060e085013517171115612751565b61280082612bdd565b61280b818584612c91565b979061282f61204b61282487516001600160a01b031690565b6020880151906142cb565b6128f35761283c43600052565b6001600160a01b0361285a60a060609701516001600160a01b031690565b166128d9575b505a810360a08401351061288a5760809360c092604087015260608601525a900391013501910152565b60408051631101335b60e11b8152600060048201526024810191909152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b909350816128ea92975085846136c9565b95909238612860565b60408051631101335b60e11b8152600060048201526024810191909152601a60448201527f4141323520696e76616c6964206163636f756e74206e6f6e63650000000000006064820152608490fd5b9290916000925a82516129558184612b35565b61295e836120f0565b602085015261299c6effffffffffffffffffffffffffffff60808301516060840151176040840151176101008601359060e087013517171115612751565b6129a581612bdd565b6129b18186868b612f1a565b98906129d561204b6129ca86516001600160a01b031690565b6020870151906142cb565b612a9a576129e243600052565b6001600160a01b03612a0060a060609601516001600160a01b031690565b16612a7f575b505a840360a086013510612a325750604085015260608401526080919060c0905a900391013501910152565b60408051631101335b60e11b815260048101929092526024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b90925081612a919298508686856138b3565b96909138612a06565b60408051631101335b60e11b8152600481018490526024810191909152601a60448201527f4141323520696e76616c6964206163636f756e74206e6f6e63650000000000006064820152608490fd5b15612af057565b60405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606490fd5b612b9a90612b52612b4582611d29565b6001600160a01b03168452565b602081013560208401526080810135604084015260a0810135606084015260c0810135608084015260e081013560c084015261010081013560e084015261012081019061191b565b908115612bd257612bc4610ebd610eb78460a094612bbf60146103a299981015612ae9565b612234565b6001600160a01b0316910152565b505060a06000910152565b60a08101516001600160a01b031615612c125760c060035b60ff60408401519116606084015102016080830151019101510290565b60c06001612bf5565b612c3360409295949395606083526060830190611db1565b9460208201520152565b906103a2602f60405180947f414132332072657665727465643a2000000000000000000000000000000000006020830152612c81815180926020868601910161197e565b810103600f8101855201836104ab565b916000926000925a93612d1f6020835193612cb385516001600160a01b031690565b95612ccb612cc4604083018361191b565b90846130fb565b60a08601516001600160a01b031690612ce343600052565b8580936001600160a01b03809416159889612ec6575b6060015190860151604051633a871cdd60e01b8152978896879586939060048501612c1b565b03938a1690f1829181612ea6575b50612e9d5750600190612d3e6123ff565b6308c379a014612e62575b50612e13575b612d5c575b50505a900391565b612d79906001600160a01b03166000526000602052604060002090565b612d8d61086382546001600160701b031690565b808311612dc457612dbd926001600160701b039103166001600160701b03166001600160701b0319825416179055565b3880612d54565b60408051631101335b60e11b8152600060048201526024810191909152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152608490fd5b60408051631101335b60e11b8152600060048201526024810191909152601660448201527f4141323320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b612e6a61241d565b9081612e765750612d49565b610c5391612e849150612c3d565b604051631101335b60e11b815291829160048301611fa6565b9550612d4f9050565b612ebf91925060203d8111611bad57611b9e81836104ab565b9038612d2d565b9450612ef8610863612eeb8c6001600160a01b03166000526000602052604060002090565b546001600160701b031690565b8b811115612f0f5750856060835b96915050612cf9565b606087918d03612f06565b90926000936000935a94612f566020835193612f3d85516001600160a01b031690565b95612ccb612f4e604083018361191b565b90848c613361565b03938a1690f18291816130db575b506130d25750600190612f756123ff565b6308c379a014613095575b50613046575b612f94575b5050505a900391565b612fb1906001600160a01b03166000526000602052604060002090565b91612fc661086384546001600160701b031690565b90818311612ff9575082546dffffffffffffffffffffffffffff19169190036001600160701b0316179055388080612f8b565b60408051631101335b60e11b815260048101929092526024820152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152608490fd5b60408051631101335b60e11b8152600481018690526024810191909152601660448201527f4141323320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b61309d61241d565b90816130a95750612f80565b86916130b59150612c3d565b604051631101335b60e11b8152918291610c539160048401611fbe565b9650612f869050565b6130f491925060203d8111611bad57611b9e81836104ab565b9038612f64565b90918061310757505050565b8151516001600160a01b031692833b61331257825160600151604051632b870d1b60e11b815290602082806131408787600484016123b8565b038160006001600160a01b0395867f00000000000000000000000000000000000000000000000000000000000000001690f1918215613305575b6000926132e5575b508082169586156132965716809503613247573b156131f857610ebd610eb77fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d936131cc93612234565b602083810151935160a00151604080516001600160a01b039485168152939091169183019190915290a3565b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152608490fd5b60408051631101335b60e11b8152600060048201526024810191909152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152608490fd5b6132fe91925060203d811161104a5761103b81836104ab565b9038613182565b61330d611a6f565b61317a565b60408051631101335b60e11b8152600060048201526024810191909152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b92909181613370575b50505050565b8251516001600160a01b031693843b61358157835160600151604051632b870d1b60e11b815290602082806133a98888600484016123b8565b038160006001600160a01b0395867f00000000000000000000000000000000000000000000000000000000000000001690f1918215613574575b600092613554575b5080821696871561350557168096036134b6573b156134695750610ebd610eb77fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d9361343693612234565b602083810151935160a00151604080516001600160a01b039485168152939091169183019190915290a33880808061336a565b60408051631101335b60e11b815260048101929092526024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b60408051631101335b60e11b8152600481018490526024810191909152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152608490fd5b60408051631101335b60e11b8152600481018690526024810191909152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152608490fd5b61356d91925060203d811161104a5761103b81836104ab565b90386133eb565b61357c611a6f565b6133e3565b60408051631101335b60e11b815260048101929092526024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b156135d557565b60405162461bcd60e51b815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152606490fd5b919060408382031261030c57825167ffffffffffffffff811161030c5783019080601f8301121561030c578151916136518361051a565b9161365f60405193846104ab565b8383526020848301011161030c5760209261367f9184808501910161197e565b92015190565b906103a2602f60405180947f414133332072657665727465643a2000000000000000000000000000000000006020830152612c81815180926020868601910161197e565b9391926060946000946000938051926136fb60a08a860151956136ed8888116135ce565b01516001600160a01b031690565b91613719836001600160a01b03166000526000602052604060002090565b9461372e61086387546001600160701b031690565b96858810613864576001600160a01b0360208a98946137718a966001600160701b038b6137919e03166001600160701b03166001600160701b0319825416179055565b0151604051637a32e3bf60e11b8152998a98899788939060048501612c1b565b0395169103f190818391849361383e575b506138375750506001906137b46123ff565b6308c379a014613815575b506137c657565b60408051631101335b60e11b8152600060048201526024810191909152601660448201527f4141333320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b61381d61241d565b908161382957506137bf565b610c5391612e849150613685565b9450925050565b90925061385d91503d8085833e61385581836104ab565b81019061361a565b91386137a2565b60408051631101335b60e11b8152600060048201526024810191909152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152608490fd5b9194929390936060956000956000938251906138da60a08b840151936136ed8486116135ce565b936138f8856001600160a01b03166000526000602052604060002090565b61390c61086382546001600160701b031690565b878110613a1b57926001600160a01b0360208a989693946137718a966001600160701b038d6139539e9c9a03166001600160701b03166001600160701b0319825416179055565b0395169103f19081839184936139fd575b506139f55750506001906139766123ff565b6308c379a0146139d6575b506139895750565b60408051631101335b60e11b815260048101929092526024820152601660448201527f4141333320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b6139de61241d565b90816139ea5750613981565b6130b5925050613685565b955093505050565b909250613a1491503d8085833e61385581836104ab565b9138613964565b60408051631101335b60e11b8152600481018c90526024810191909152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152608490fd5b60031115613a7457565b634e487b7160e01b600052602160045260246000fd5b929190613aa8604091600286526060602087015260608601906119a1565b930152565b939291906003811015613a7457604091613aa89186526060602087015260608601906119a1565b906103a2603660405180947f4141353020706f73744f702072657665727465643a20000000000000000000006020830152613b18815180926020868601910161197e565b81010360168101855201836104ab565b929190925a93600091805191613b3d83614191565b9260a0810195613b5487516001600160a01b031690565b6001600160a01b0393908481169081613c7157505050613b7b82516001600160a01b031690565b985b5a90030193840297604084019089825110613c22577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f94613bc76020928c613c1d95510390614367565b015194896020613bef613be186516001600160a01b031690565b9a516001600160a01b031690565b9401519785604051968796169a16988590949392606092608083019683521515602083015260408201520152565b0390a4565b60408051631101335b60e11b8152600060048201526024810191909152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b9a918051613c81575b5050613b7d565b6060850151600099509091803b15613d66579189918983613cbb9560405180978196829563a9a2340960e01b84528c029060048401613a8a565b0393f19081613d53575b50613d4e576001613cd46123ff565b6308c379a014613d2f575b613ceb575b3880613c7a565b60408051631101335b60e11b8152600060048201526024810191909152601260448201527110504d4c081c1bdcdd13dc081c995d995c9d60721b6064820152608490fd5b613d3761241d565b80613d425750613cdf565b612e84610c5391613ad4565b613ce4565b80610c7a613d609261047b565b38613cc5565b8980fd5b9392915a90600092805190613d7e82614191565b9360a0830196613d9588516001600160a01b031690565b6001600160a01b0395908681169081613e5857505050613dbc84516001600160a01b031690565b915b5a9003019485029860408301908a825110613e0b57507f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f949392613bc7613c1d938c602094510390614367565b60408051631101335b60e11b815260048101929092526024820152602060448201527f414135312070726566756e642062656c6f772061637475616c476173436f73746064820152608490fd5b93918051613e68575b5050613dbe565b606087015160009a509091803b15613f4b57918a918a83613ea29560405180978196829563a9a2340960e01b84528c029060048401613a8a565b0393f19081613f38575b50613f33576001613ebb6123ff565b6308c379a014613f16575b613ed2575b3880613e61565b60408051631101335b60e11b8152600481018d90526024810191909152601260448201527110504d4c081c1bdcdd13dc081c995d995c9d60721b6064820152608490fd5b613f1e61241d565b80613f295750613ec6565b6130b58d91613ad4565b613ecb565b80610c7a613f459261047b565b38613eac565b8a80fd5b909392915a94805191613f6183614191565b9260a0810195613f7887516001600160a01b031690565b6001600160a01b0393818516918261403957505050613f9e82516001600160a01b031690565b985b5a90030193840297604084019089825110613c22577f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f94613fea6020928c613c1d95510390614367565b613ff388613a6a565b01519489602061400d613be186516001600160a01b031690565b940151604080519182529815602082015297880152606087015290821695909116939081906080820190565b9a918151614049575b5050613fa0565b8784026140558a613a6a565b60028a146140c7576060860151823b1561030c5761408f93600080948d6040519788968795869363a9a2340960e01b855260048501613aad565b0393f180156140ba575b6140a7575b505b3880614042565b80610c7a6140b49261047b565b3861409e565b6140c2611a6f565b614099565b6060860151823b1561030c576140f993600080948d6040519788968795869363a9a2340960e01b855260048501613aad565b0393f1908161417e575b506141795760016141126123ff565b6308c379a014614166575b156140a05760408051631101335b60e11b8152600060048201526024810191909152601260448201527110504d4c081c1bdcdd13dc081c995d995c9d60721b6064820152608490fd5b61416e61241d565b80613d42575061411d565b6140a0565b80610c7a61418b9261047b565b38614103565b60e060c08201519101518082146141b5574801808210156141b0575090565b905090565b5090565b604051906141c68261048f565b60006040838281528260208201520152565b6141e06141b9565b5065ffffffffffff808260a01c16801561421f575b604051926142028461048f565b6001600160a01b038116845260d01c602084015216604082015290565b50806141f5565b61423b614241916142356141b9565b506141d8565b916141d8565b906001600160a01b0391828251169283156142c0575b65ffffffffffff9283918260408160208501511693015116938360408160208401511692015116908084106142b8575b508085116142b0575b506040519561429e8761048f565b16855216602084015216604082015290565b935038614290565b925038614287565b815181169350614257565b6001600160a01b0316600052600160205267ffffffffffffffff6143098260401c6040600020906001600160c01b0316600052602052604060002090565b9182549261431684611ca7565b9055161490565b906001600160a01b0361432e6121fc565b9216600052600060205263ffffffff600160406000206001600160701b03815460781c1685520154166020830152565b6103a23361440c565b6001600160a01b0316600052600060205260406000206001600160701b03808254169283018093116143ff575b8083116143ba576103a292166001600160701b03166001600160701b0319825416179055565b60405162461bcd60e51b815260206004820152601060248201527f6465706f736974206f766572666c6f77000000000000000000000000000000006044820152606490fd5b614407611a7c565b614394565b6001600160a01b039061441f3482614367565b168060005260006020527f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c460206001600160701b0360406000205416604051908152a2565b1561446b57565b60405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152606490fd5b156144b757565b60405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606490fd5b1561450357565b60405162461bcd60e51b815260206004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152606490fd5b1561454f57565b60405162461bcd60e51b815260206004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152606490fd5b9065ffffffffffff608060016103a2946145ce6001600160701b0386511682906001600160701b03166001600160701b0319825416179055565b602085015115156eff000000000000000000000000000082549160701b16806eff00000000000000000000000000001983161783557fffffff000000000000000000000000000000ffffffffffffffffffffffffffff7cffffffffffffffffffffffffffff000000000000000000000000000000604089015160781b16921617178155019263ffffffff60608201511663ffffffff1985541617845501511669ffffffffffff0000000082549160201b169069ffffffffffff000000001916179055565b1561469957565b60405162461bcd60e51b815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152606490fd5b91909165ffffffffffff80809416911601918211611aa057565b156146ff57565b60405162461bcd60e51b815260206004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152606490fd5b1561474b57565b60405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606490fd5b1561479757565b60405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606490fd5b156147e357565b60405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606490fd5b1561482f57565b60405162461bcd60e51b815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152606490fd5b816040519182372090565b9060009283809360208451940192f190565b3d6108008082116148b8575b50604051906020818301016040528082526000602083013e90565b90503861489d56fea26469706673582212202f35348e056a5a501cd9bbfbaa1006a10551a569649616091bb4f3db2b6c5b6964736f6c63430008110033608080604052346100165761019d908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63570e1a361461002857600080fd5b346100ab5760203660031901126100ab5760043567ffffffffffffffff918282116100ab57366023830112156100ab5781600401359283116100ab5736602484840101116100ab576100a761008084602485016100c5565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b80fd5b50634e487b7160e01b600052604160045260246000fd5b90806014116101485767ffffffffffffffff91601319820183811161015a575b60405193600b8401601f19908116603f011685019081118582101761014d575b60405280845260208401903684840111610148576020946000600c819682946014880187378301015251923560601c5af190600051911561014257565b60009150565b600080fd5b6101556100ae565b610105565b6101626100ae565b6100e556fea26469706673582212207af85a71786768bc21f3d8d4ec57267fe588cd269661391b75f64debdf51ca5c64736f6c63430008110033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
