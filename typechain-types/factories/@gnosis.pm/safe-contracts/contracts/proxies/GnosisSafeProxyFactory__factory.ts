/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  GnosisSafeProxyFactory,
  GnosisSafeProxyFactoryInterface,
} from "../../../../../@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ProxyCreation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "calculateCreateProxyWithNonceAddress",
    outputs: [
      {
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createProxy",
    outputs: [
      {
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
      {
        internalType: "contract IProxyCreationCallback",
        name: "callback",
        type: "address",
      },
    ],
    name: "createProxyWithCallback",
    outputs: [
      {
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createProxyWithNonce",
    outputs: [
      {
        internalType: "contract GnosisSafeProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyRuntimeCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610c9d908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081631688f0b91461008e575080632500510e1461008557806353e5d9351461007c57806361b69abd14610073578063addacc0f1461006a5763d18af54d1461006257600080fd5b61000e610434565b5061000e6103ed565b5061000e6102dd565b5061000e610295565b5061000e6101db565b346100fa5760603660031901126100fa57600435906100ac826100fd565b6024359067ffffffffffffffff82116100fa576100f66100dc846100d336600487016101bd565b60443591610574565b6040516001600160a01b0390911681529081906020820190565b0390f35b80fd5b6001600160a01b0381160361000e57565b50634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161013957604052565b61014161010e565b604052565b90601f8019910116810190811067ffffffffffffffff82111761013957604052565b92919267ffffffffffffffff82116101b0575b60405191610193601f8201601f191660200184610146565b82948184528183011161000e578281602093846000960137010152565b6101b861010e565b61017b565b9080601f8301121561000e578160206101d893359101610168565b90565b3461000e57606036600319011261000e576004356101f8816100fd565b60243567ffffffffffffffff80821161000e573660238301121561000e57816004013590811161000e57366024828401011161000e5761023f926024604435930190610717565b50565b600091031261000e57565b60005b8381106102605750506000910152565b8181015183820152602001610250565b906020916102898151809281855285808601910161024d565b601f01601f1916010190565b503461000e57600036600319011261000e576100f661016b604051906102be6020820183610146565b8082526107a16020830139604051918291602083526020830190610270565b503461000e57604036600319011261000e576004356102fb816100fd565b67ffffffffffffffff60243581811161000e5761031c9036906004016101bd565b9060405161016b80820192828410908411176103e0575b61090c82396001600160a01b038416825260208160009303019082f09182156103d3575b805190816103bc575b604080516001600160a01b038681168252871660208201526100f69186917f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2359190a16040516001600160a01b0390911681529081906020820190565b8291602083920182865af1156100fa578080610360565b6103db610567565b610357565b6103e861010e565b610333565b503461000e57600036600319011261000e576100f66086604051906104156020820183610146565b808252610be26020830139604051918291602083526020830190610270565b503461000e57608036600319011261000e57600435610452816100fd565b60243567ffffffffffffffff811161000e576104729036906004016101bd565b906044359160643591610484836100fd565b6001600160a01b036104dc60405160208101906104d2816104c4898b86909160349282526bffffffffffffffffffffffff199060601b1660208201520190565b03601f198101835282610146565b5190208484610574565b931693846104f9575b6040516001600160a01b0385168152602090f35b843b1561000e576100f69461052a9360008094604051968795869485936303ca56a360e31b85528b600486016106e4565b03925af1801561055a575b610541575b80806104e5565b8061054e61055492610125565b80610242565b3861053a565b610562610567565b610535565b506040513d6000823e3d90fd5b909291610582908483610631565b92805190816105cd575b5050604080516001600160a01b0385811682529290921660208301527f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e23591a1565b600091602083920182875af11561000e57388061058c565b156105ec57565b60405162461bcd60e51b815260206004820152601360248201527f437265617465322063616c6c206661696c6564000000000000000000000000006044820152606490fd5b92916106d5916106a66106c4825160208094012060409081519585870191825282870152818652606086019086821067ffffffffffffffff8311176106d7575b8183528651902095608061016b9161068b88840185610146565b8284520190610a77823982519485925180928885019061024d565b81016001600160a01b03809a16868201520384810184520182610146565b805191016000f592831615156105e5565b565b6106df61010e565b610671565b949392610712916060936001600160a01b038092168852166020870152608060408701526080860190610270565b930152565b9161072f945090610729913691610168565b90610631565b604051906bffffffffffffffffffffffff199060601b16602082015260148152604081019080821067ffffffffffffffff831117610793575b604082905262461bcd60e51b825260206044820152603f199061078e6064820182610270565b030190fd5b61079b61010e565b61076856fe6080346100c957601f61016b38819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b038116908190036100c957801561007957600080546001600160a01b031916919091179055604051608690816100e58239f35b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526000805473ffffffffffffffffffffffffffffffffffffffff1690803563530ca43760e11b14604957808092368280378136915af43d82803e156045573d90f35b3d90fd5b6020918152f3fea2646970667358221220395c2c60c543625c19468fde6398f1fb2aecfa04cf3e9eefbf2fa55c58ddec6064736f6c634300081100336080346100c957601f61016b38819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b038116908190036100c957801561007957600080546001600160a01b031916919091179055604051608690816100e58239f35b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526000805473ffffffffffffffffffffffffffffffffffffffff1690803563530ca43760e11b14604957808092368280378136915af43d82803e156045573d90f35b3d90fd5b6020918152f3fea2646970667358221220395c2c60c543625c19468fde6398f1fb2aecfa04cf3e9eefbf2fa55c58ddec6064736f6c634300081100336080346100c957601f61016b38819003918201601f19168301916001600160401b038311848410176100ce578084926020946040528339810103126100c957516001600160a01b038116908190036100c957801561007957600080546001600160a01b031916919091179055604051608690816100e58239f35b60405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526000805473ffffffffffffffffffffffffffffffffffffffff1690803563530ca43760e11b14604957808092368280378136915af43d82803e156045573d90f35b3d90fd5b6020918152f3fea2646970667358221220395c2c60c543625c19468fde6398f1fb2aecfa04cf3e9eefbf2fa55c58ddec6064736f6c6343000811003360806040526000805473ffffffffffffffffffffffffffffffffffffffff1690803563530ca43760e11b14604957808092368280378136915af43d82803e156045573d90f35b3d90fd5b6020918152f3fea2646970667358221220395c2c60c543625c19468fde6398f1fb2aecfa04cf3e9eefbf2fa55c58ddec6064736f6c63430008110033a26469706673582212206bd0b00ed2dcb304373881b1a1b9bb4db853472d3ab2cc13b0ece73fadc1a50164736f6c63430008110033";

type GnosisSafeProxyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GnosisSafeProxyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GnosisSafeProxyFactory__factory extends ContractFactory {
  constructor(...args: GnosisSafeProxyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GnosisSafeProxyFactory> {
    return super.deploy(overrides || {}) as Promise<GnosisSafeProxyFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GnosisSafeProxyFactory {
    return super.attach(address) as GnosisSafeProxyFactory;
  }
  override connect(signer: Signer): GnosisSafeProxyFactory__factory {
    return super.connect(signer) as GnosisSafeProxyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GnosisSafeProxyFactoryInterface {
    return new utils.Interface(_abi) as GnosisSafeProxyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GnosisSafeProxyFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GnosisSafeProxyFactory;
  }
}
